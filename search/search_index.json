{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"RetroTxt","text":"<ul> <li> <p> Chrome</p> <p>Install from the chrome web store for all compatible browsers</p> <p> Install</p> </li> <li> <p> Edge</p> <p>Install from the Microsoft Edge Add-ons</p> <p> Install</p> </li> <li> <p> Firefox</p> <p>Install from the Firefox Add-ons using an older version of RetroTxt</p> <p> Install</p> </li> <li> <p> Open Source, LGPL-3.0</p> <p>RetroTxt is licensed under LGPL and available on GitHub</p> <p> Repository</p> </li> </ul>"},{"location":"#turn-pieces-of-ansi-ascii-and-nfo-documents-into-a-web-documentretrotxt-is-the-extension-that-takes-legacy-and-plain-text-files-and-correctly-stylizes-them-for-viewing-or-copying-from-a-browser-tab","title":"Turn pieces of ANSI, ASCII, and NFO documents into a web documentRetroTxt is the Extension that takes legacy and plain text files and correctly stylizes them for viewing or copying from a browser tab","text":"<ul> <li> View ANSI, ASCII, NFO, Shift JIS text art as a web document</li> <li> View server, terminal, and DevOps logs styled with colored text</li> <li> View BBS colored text files for Celerity, PC Board, Renegade, Telegard, Wildcat!, WVIV systems</li> </ul>"},{"location":"#screenshots","title":"Screenshots","text":"ShowcaseRaw textFontsDisplayExtra infoText editor <p> View ANSI colored text in a browser </p> <p> The original, raw text view </p> <p> Choose from hundreds of fonts to style texts </p> <p> Descriptive and simple to use options </p> <p> Optional extra details for each text file </p> <p> Copy the output of RetroTxt and paste it into a standard text editor </p>"},{"location":"#features","title":"Features","text":"<p>Why does RetroTxt require Read and change all data permissions</p> <p></p> <p>The short answer is that it doesn't, which is a limitation of the web extension permissions. RetroTxt ignores all websites except those you tell it to monitor in the background.</p> <p>If you're in a corporate environment or security conscious, after installation, you can fine-tune the browser to further lockdown RetroTxt.</p>"},{"location":"#swappable-palettes-for-different-color-simulationsvga-cga-unix-xterm-apple-iigs-commodore-64-monochrome-and-switchable-ice-colors","title":"Swappable palettes for different color simulationsVGA, CGA, Unix xterm, Apple IIgs, Commodore 64, monochrome and switchable iCE Colors","text":""},{"location":"#customizable-font-and-background-colors","title":"Customizable font and background colors","text":""},{"location":"#sauce-metadata-parsing","title":"SAUCE metadata parsing","text":""},{"location":"#support-for-multiple-text-encodingsms-dos-cp-437-amiga-iso-8959-1-windows-1252-japanese-shift-jis","title":"Support for multiple text encodingsMS-DOS CP-437, Amiga ISO-8959-1, Windows 1252, Japanese Shift-JIS","text":""},{"location":"#automatic-fixes-for-block-character-and-line-artifacts","title":"Automatic fixes for block character and line artifacts","text":""},{"location":"#hundreds-of-ibm-pc-font-choicesvga-ega-cga-mda-ps2-and-more","title":"Hundreds of IBM PC font choicesVGA, EGA, CGA, MDA, PS/2, and more","text":""},{"location":"#various-amiga-and-microcomputer-fontsfrom-amstrad-atari-apple-commodore-tandy-and-many-more","title":"Various Amiga and microcomputer fontsFrom Amstrad, Atari, Apple, Commodore, Tandy, and many more","text":""},{"location":"changes/","title":"Changes and improvements","text":""},{"location":"changes/#551","title":"5.5.1","text":"<ul> <li>New Departure Mono font.</li> </ul>"},{"location":"changes/#55","title":"5.5","text":""},{"location":"changes/#june-2024","title":"June 2024","text":"<ul> <li>New Text Size slider in the Options to adjust the font size and removed the Font size adjustment on the information header.</li> <li>Updated the Bulma CSS framework to v1.0. The Options themes look different due to this update, as the framework was rewritten from scratch. The fonts, tag elements and some buttons used in the Options are larger.</li> <li>Updated Cascadia Mono and Code fonts to v2024.4 to use its new Symbols for Legacy Computing support, \"the Cascadia family now supports a whopping 1140 new glyphs covering sextants, octants, large type pieces, eights, sedecimants, quadrants (separated), segmented digits, circles and checkerboards... In addition, the existing block elements have been aligned to fit the same grid as the new characters to make for seamless ANSI art.\"</li> <li>Reworked the Display Options tab.</li> <li> <ul> <li>The 80 column wrap toggle is renamed to Narrow wrap and works with both ANSI and plain text documents.</li> </ul> </li> <li> <ul> <li>Created a new Style panel and moved a number of Text toggles to it.</li> </ul> </li> <li> <ul> <li>Colors panel has been split into Text color and ANSI color.</li> </ul> </li> <li> <ul> <li>Text pairs is now Foreground and background pair, and it now uses the current selected font for the color labels.</li> </ul> </li> <li>Fixed Blinking cursor and text off option not applying to the cursor.</li> </ul>"},{"location":"changes/#54","title":"5.4","text":""},{"location":"changes/#february-2024","title":"February 2024","text":"<ul> <li>New Backup and restore options to save and load your RetroTxt settings.</li> <li>New reset button for the Custom colour values in the Options.</li> <li>New Limit URLs option to force Hyperlink to validate URLs, linking only links that start with an http or https protocol.</li> <li>New Reset to defaults button in the Settings Options.</li> <li>Changed the CSS of the page wrap toggle.   It now works correctly on windows and tabs smaller than 640px in width. And it has enabled an optimized text-wrapping feature.</li> <li>Monitor downloads handles different server replies better and provides a restart recommendation when toggled on.</li> <li>Text render effect option is changed to use a toggle switch.</li> <li>Changed the Line Height slider to display variations in percentage values.</li> <li>Fixed error Cannot read properties of null for new installs.</li> </ul>"},{"location":"changes/#53","title":"5.3","text":""},{"location":"changes/#january-2024","title":"January 2024","text":"<ul> <li>New Intel One Mono fonts.</li> <li>Removed the column wrap toggle from the information header of a RetroTxt browser tab.   The feature was confusing with the page wrap toggle, and would not work correctly with the 80 column wrap ANSI option in the RetroTxt Options.</li> <li>Fixed a major issue in Chrome 118+, with text files breaking due to the Sanitizer API deprecation. As a stopgap, the DOMPurify library is used to sanitise the text files.</li> <li>The RetroTxt options tab changes the document title.</li> <li>Clicking the links or buttons in the toolbar popup will only ever open one RetroTxt options tab.</li> <li>Fixed Monitor downloads launching twin tabs of the same file.</li> <li>Minor tweak to the Getting Started dialog text.</li> <li>Removed <code>version_name</code> from the manifest as it hid useful version information.</li> <li>Fixed <code>C:/</code> drive being referenced on non-Windows operating systems.</li> <li>Fixed \"RetroTxt has run into a problem\" displaying the wrong keyboard keys on macOS.</li> <li>Fixed <code>package.json</code> <code>version</code> number not matching the manifest.</li> </ul>"},{"location":"changes/#52","title":"5.2","text":""},{"location":"changes/#june-2023","title":"June 2023","text":"<ul> <li>New Display Hyperlinks option to convert plain text URLs, emails and IP addresses into hyperlinks.</li> <li>New Cascadia Mono and Code fonts, that support ligatures and Powerline symbols.</li> <li>Toolbar popup contains icons with links to the fonts, display, settings options and a link to the RetroTxt Extension Details tab.</li> <li>Update Spleen fonts to v2.0 and include the use of size 32x64 variation.</li> <li>Fixed Page wrap behaviour not replicating on new tabs.</li> <li>Hyperlinked the Allow access to file URLs is off notice in the popup.</li> </ul>"},{"location":"changes/#51","title":"5.1","text":""},{"location":"changes/#april-2023","title":"April 2023","text":"<ul> <li>Change the behavior of the toolbar button to display useful usability information.   The previous, unreliable per-tab on/off toggle function would sometimes have Chrome disconnect the button from the tab, breaking the functionality.</li> <li>The home and office computer fonts use a local, monospaced font as the fallback. Previously, the browser would show out-of-range characters in a variable-width font, making blocks and line characters look unnecessarily messy.</li> <li>Update the Information header to reorder the information displayed and mention the shortcut keys to view the original text.</li> <li>Update and fix broken links to external resources and prioritized HTTPS over HTTP schemes.</li> <li>Rearrange the Settings and Feature pane to emphasize the add domain input.</li> <li>Fix a bug that gave RetroTxt access to the Suggested domains after removing them.</li> </ul>"},{"location":"changes/#50","title":"5.0","text":""},{"location":"changes/#migration-to-manifest-v3-september-2022","title":"Migration to Manifest v3 ~ September 2022","text":"<p>Warning</p> <p>Unfortunately, some Options settings may be lost in this upgrade when updating from RetroTxt versions 4.</p> <p>Info</p> <p>Currently this v5.0 upgrade is not available to Firefox.</p>"},{"location":"changes/#highlights","title":"Highlights","text":"<ul> <li>Options interface should be more responsive with less visual jank.</li> <li>RetroTxt features and functions are more reliable.</li> <li>Changing Options should apply to all open tabs, including focused and unfocused tabs.</li> </ul> <ul> <li>Manifest v3 has much better error handling and there should be less uncaptured errors.</li> <li>Unfocused tabs can run RetroTxt in the background.</li> <li>Browser tab displays the SAUCE title and author when available.</li> <li>Artworks linked in the Samples tab display the title and author on the browser tab.</li> <li>Smear block characters are applied to BBS texts.</li> <li>Monitor downloads works better with 16colo.rs and defacto2.net by ignoring their incorrect <code>Content-Type</code> headers.</li> <li>New Toolbar icon setting to select dark or light mode button.</li> <li>Updated the Welcome, new install text to be a Getting started with RetroTxt brief.</li> <li>Information header encoding can be clicked to change the encoding.</li> </ul> <ul> <li>Fixed font size adjustment for 2x and 3x values. Text now centre aligns and stopped unexpected text wrapping.</li> <li>Fixed Options reloading the page when a new tab was selected.</li> <li>Tweaked the Information header CSS to use very slight rounded corners.</li> <li>Documentation tab in Options shares the same layout and formatting as the other menus.</li> <li>Settings - Run RetroTxt on files hosted on these domains   The on/off toggle has been removed for code simplification.   Created a button to remove and restore website suggestions.   Hostname input form responds to Enter \u21b5 key presses.</li> <li>Settings - Monitor downloads, toggles the optional <code>download</code> and <code>downloads.open</code> permissions.</li> <li>Mentions of the file scheme <code>file:///</code>, will under Windows display as <code>file:///C:/</code></li> <li>Transcode context menu is disabled by default except for textfile tabs.</li> <li>Replaced the <code>scripts/eventpage.js</code> background page with modular service workers.</li> <li>Replaced and split the <code>scripts/functions.js</code> shared functions page with <code>scripts/helpers.js</code> for content-scripts and <code>scripts/sw/helpers.js</code> for service workers.</li> <li>Replaced simple one-time message requests with long-lived connections where needed.   This should fix some strange behaviour and failures that occurred in previous versions.</li> <li>Removed the use of <code>Window.localStorage</code> and <code>Window.sessionStorage</code> which held Options settings and replaced it with <code>chrome.storage.local</code>.   This was needed as the <code>Window</code> interface is not accessible by service workers which are required by Manifest v3.</li> <li>Dropped the permissions requirement for <code>tabs</code>.</li> <li>Dropped the Transcode text context menu.</li> </ul> <ul> <li>Using pnpm as the dependencies manager.</li> <li>The use of Manifest v3 with service workers is incompatible with Firefox.</li> <li>Removed the Firefox specific build tools.</li> </ul>"},{"location":"changes/#42","title":"4.2","text":""},{"location":"changes/#october-2021","title":"October 2021","text":"<ul> <li>Squared 1:1, 8x8 pixel PC fonts now use their <code>-2y</code> variants when available.   The 2y variants are 16x16 in size, meaning they're easier to read and look better.</li> <li>11 new color themes for the Options tab under Settings.</li> <li>Replaced deprecated API function, <code>extension.getURL()</code>.</li> <li>Fixed broken elements in <code>options.html</code>.</li> </ul>"},{"location":"changes/#41","title":"4.1","text":""},{"location":"changes/#june-2021","title":"June 2021","text":"<ul> <li>Updated PC and MS-DOS fonts to Ultimate Oldschool PC Font Pack v2.2.</li> <li>Support for custom ports in URLs such as <code>http://localhost:8080</code> or <code>https://example.com:9999</code>.</li> <li>Replaced all the <code>woff</code> fonts with <code>woff2</code> fonts to offer better file compression.   This reduces the overall file size of RetroTxt and system resource usage.</li> <li>The Options Fonts tab Jump to menu now always remains on the tab.</li> <li>Reduced page flicker when switching Options tabs.</li> <li>Fixed broken Apple Lisa fonts.</li> <li>Fixed the local file viewer toggling on non-text file tabs when the file's extension is in uppercase.</li> <li>Fixed certain fonts that use spaces within their names, breaking the loading text files.</li> <li>Fixed broken SAUCE IBM VGA50 font.</li> <li>Improved support and display of multiline SAUCE comments.</li> <li>Improve the positioning of the error alert box.</li> <li>Spelling and typo fixes for both UK and US English.</li> <li>Using Task for the build process.</li> <li>Dropped the use of the convoluted Node.createTextNode() and Node.appendChild() methods.</li> </ul>"},{"location":"changes/#40","title":"4.0","text":""},{"location":"changes/#highlights_1","title":"Highlights","text":"<ul> <li>Complete Options redesign, it loads in a tab and is identical across all browsers.</li> <li>Welcome tab features is merged into the Options tab.</li> <li>Refreshed the information header.</li> <li>200+ PC/MS-DOS system fonts.</li> <li>Numerous new fonts for home computers.</li> <li>Improved the font representation for SAUCE fontname matching.</li> <li>Dropped the context menu functionality and replaced it with Option tab links.</li> <li>Omnibox support, type <code>rt</code> space in the browser address bar to see the list of commands.</li> </ul>"},{"location":"changes/#october-2020","title":"October 2020","text":"<ul> <li> <p>The font choice save is reset.</p> </li> <li> <p>Minimum Chrome requirement v72, minimum Firefox requirement v69.</p> </li> <li> <p>Improved compatibility with Amiga ANSI.</p> </li> <li> <p>Added Unscii fonts fantasy and MCR.</p> </li> <li>Added PR Number 3 (Apple II).</li> <li>Added Apple IIGS Shaston system fonts.</li> <li>Added Apple GEOS Berkelium fonts.</li> <li>Added Pet Me Commodore 64 fonts.</li> <li>Added Tandy TRS-80 and CoCo fonts.</li> <li>Added IBM 3270 font.</li> <li> <p>Added new Workbench ANSI theme.</p> </li> <li> <p>Updated Print Char 21 font (Apple II).</p> </li> <li>Updated Unscii fonts to v2.0.</li> <li> <p>Updated Plex Mono fonts plus new weights.</p> </li> <li> <p>Changed references to web-extension, web extension, WebExtension to Extension, with a capital E.</p> </li> <li> <p>Moved documentation from the barebones Wiki into <code>/docs</code> and https://docs.retrotxt.com.</p> </li> <li> <p>Options in Chrome uses a dedicated browser tab.</p> </li> <li>Options in Chrome implements Bulma as a CSS framework for a larger and improved layout.</li> <li>Added <code>content-visibility</code> CSS attribute for Chrome 85+ to help improve large screen rendering, see issue #91.</li> <li>Added showBrowser(), links to the Edge Add-ons page, issue #78.</li> <li>Replaced all Material Design Icon fonts with individual SVG images. This improves icon resize scalability and user accessibility, see issue #92.</li> <li>Fixed eventpage.js <code>invoke()</code>, checks the <code>lastError</code> value, this also fixes issue #93.</li> <li>Fixed the broken toolbar icon swap when Chrome detects a system dark mode theme.</li> <li>Updated dev dependencies and libraries.</li> <li>Moved the programming code and assets of the Extension into <code>/ext</code>.</li> <li>Removed Windows PowerShell source code support, instead Windows users can use WSL.</li> <li>Removed 'API permissions granted' from the Options as it duplicates included browser features.</li> <li>Renamed <code>Storage</code> class to <code>LocalStore</code> to avoid browser API conflicts.</li> <li>Context menus code were difficult to maintain and inconsistent between browsers.</li> <li>Unified pages to use LF instead of CRLF.</li> <li>Added support for ECMA48 SGR20 Fraktur font.</li> </ul>"},{"location":"changes/#35","title":"3.5","text":""},{"location":"changes/#march-2020","title":"March 2020","text":"<ul> <li>Added Spleen font support.</li> <li>Added Microsoft Edge browser support.</li> <li>Added Microsoft Edge Addons links.</li> <li>Improved compatibility with Blocktronics Blocky Horror &amp; dsotb packs.</li> <li>Added labels to for() loops.</li> <li>Added <code>hidepassed</code> argument to QUnit test links.</li> <li>Added Chrome and Edge browser version info to welcome.html.</li> <li>isNum() now intentionally points to either to the Number function.</li> <li>Fixed stylesheets not being loaded for BBS coloured text formats.</li> <li>Fixed broken DOM() class unit test.</li> <li>Fixed New width byte sequence 80 console message.</li> <li>Fixed colorpalette() causing errors with non-ANSI art.</li> <li>Fixed missing Unscii credit on the Firefox Options About tab.</li> <li>Fixed 'Font family used for display' title mislabelling some fonts.</li> <li>Reduced the width of the Options menu buttons to better fit with Edge.</li> </ul>"},{"location":"changes/#342","title":"3.4.2","text":""},{"location":"changes/#october-2019","title":"October 2019","text":"<ul> <li>Created an ANSI tab in the options.</li> <li>Created <code>Default color palette</code> selection option.</li> <li>Added links in the welcome page for extension-app store reviews.</li> <li>Replaced Download API console warnings on startup with logs.</li> </ul>"},{"location":"changes/#34","title":"3.4","text":""},{"location":"changes/#august-2019","title":"August 2019","text":"<ul> <li>Improved compatibility with wide, 80+ column ANSI art.</li> <li>Improved compatibility with narrow, -80 column ANSI art.</li> <li>Much improved compatibility with late 1990s, 80 column ANSI art.</li> <li>Added new Display Option \"Smear block characters\" that applies CSS text-shadowing specifically on CP-437 block characters to reduce line artefacts on Windows operating systems.</li> <li>Added Celerity BBS | color codes support.</li> <li>Added Renegade BBS | color codes support.</li> <li>Added Telegard BBS ` color codes support.</li> <li>Added WVIV BBS |# pipe code support.</li> <li>Added WVIV BBS \u2665 heart code support.</li> <li>Added Apple IIgs and Commodore 64 palettes for 4-bit ANSI.</li> <li>Blinking text now works properly on non-black backgrounds.</li> <li>Change minimum Chromium version to 58.</li> <li>Simplified some of the JS source code.</li> <li>Horizontal tab C0 codes in ANSI art now always display the <code>\u25cb</code> character when DOS control glyphs is enabled.</li> <li> <ul> <li>Test case <code>blocktronics_block_n_roll/die-already.ans</code></li> </ul> </li> <li>Improved the accuracy of parsing of iCE color ANSIflags.</li> <li>Changed the ANSI slow blink timing (SGR5) to 500ms and fast blink (SGR6) to 300ms.</li> <li>Default CSS line-height value switched from <code>100%</code> to <code>normal</code> for better compatibility with alt-fonts.</li> <li>Consolidated iCE Colors and VGA CSS classes to reduce duplication.</li> <li>Fixed issue 71 with the incorrect colour rendering of some RGB values.</li> <li>Fixed ultrawide ANSI art wrapping to the browser tab instead of overflowing with scrollbars.</li> <li>Fixed critical issue where a corrupt SAUCE font value breaks the ANSI render.</li> <li> <ul> <li>Test case <code>blocktronics_block_n_roll/nu-ninja_cat.ans</code></li> </ul> </li> <li>Fixed welcome page not displaying Configure RetroTxt and Permissions Request example images.</li> <li>Fixed <code>@CLS@</code>, it now does not automatically assume a PCBoard @-code file.</li> <li>Fixed <code>&gt;</code> <code>&lt;</code> and <code>&amp;</code> characters breaking the end-of-line character count in ANSI text.</li> <li>Fixed RetroTxt unintentionally triggering when the browser plays audio/video media using <code>file:///</code> URLs.</li> <li>Fixed Firefox Options sample text displaying a white shadow effect in Normal render mode.</li> <li>Renamed <code>/docs/</code> directory to <code>/md/</code>, most of the documentation is now located at the Wiki.</li> <li>Replaced non-working <code>textmod.es/crew</code> links with <code>16colo.rs/tags/group</code>.</li> <li>Removed the Smeared text render toggle as it has been replaced with the Smear block characters setting.</li> <li>Removed the Focus mode as the technical debt to maintain was too high.</li> <li>Removed theme and display adjustments from the context menus to simplify the code.</li> </ul>"},{"location":"changes/#33","title":"3.3","text":""},{"location":"changes/#june-2019","title":"June 2019","text":"<ul> <li>Added a Focus mode toggle.</li> <li>Added Unscii 8 and Unscii 16 font support.</li> <li>Added Line wrap toggle to the information header when displaying ANSI/ECMA-48 text.</li> <li>Added preferred dark mode support for Chrome/Chromium 67+ browsers.</li> <li>Significantly reduced the tab memory usage after rendering ANSI/ECMA-48 text.</li> <li>Dropped the use of <code>null</code> in all large, internal arrays which should slightly improve performance with the JavaScript V8 engine.</li> <li>Significantly reduced the console spam when undetected ANSI control sequences are found.</li> <li>Refactored <code>scripts\\parse_ansi.sys</code> to use ES5 Class expressions so the source code easier to follow.</li> <li>Added support for the following ECMA-48 controls.</li> <li> <ul> <li>CHT Cursor Forward Tabulation, it acts as 4 forward space movements.</li> </ul> </li> <li>Changed the horizontal behaviour of the ECMA-48 HVP command, it will now wrap to the maximum columns limit and then continue on the new row.</li> <li>Greatly expanded the unit test coverage of parse_ansi.js.</li> <li>Fixed, duplicate downloads are triggering with some binary file types such as woff fonts.</li> <li>Fixed, Save link as accidentally creating a new, empty <code>file:///</code> tab.</li> <li>Fixed ECMA-48 CUD bug where there were too many rows created.</li> <li>An error is now displayed when trying to load a <code>file:///</code> with no content.</li> </ul>"},{"location":"changes/#32","title":"3.2","text":""},{"location":"changes/#february-2019","title":"February 2019","text":"<ul> <li>Added IBM AIX terminal bright and bold colour support.</li> <li>Improved Allow access to file URLs is disabled notification to be more prominent.</li> <li>Added npm run scripts to the package.json.</li> <li> <ul> <li><code>npm run build</code></li> </ul> </li> <li> <ul> <li><code>npm run firefox</code></li> </ul> </li> <li> <ul> <li><code>npm run lint</code></li> </ul> </li> <li> <ul> <li><code>npm run version</code></li> </ul> </li> <li>Fixed <code>Downloads.listen()</code> causing an endless download loop (issue #56).</li> <li>Fixed <code>hideEntities()</code> not catching <code>&lt;&gt;</code> character combinations that broke ANSI rendering (issue #58).</li> <li>Fixed the Options Apply RetroTxt to any local text files file:/// link pointing to the <code>C:</code> drive on Linux and macOS.</li> </ul>"},{"location":"changes/#31","title":"3.1","text":""},{"location":"changes/#december-2018","title":"December 2018","text":"<ul> <li>Re-added the ability to make additions to the Apply RetroTxt to text files hosted on these websites list that was disabled in v3.0.</li> <li>Fixed the Zeus II logo for the welcome screen breaking on Linux.</li> <li>Fixed Homepage URL in the Firefox addon tab.</li> <li>Fixed incorrect links in <code>README.md</code>.</li> </ul>"},{"location":"changes/#30","title":"3.0","text":""},{"location":"changes/#highlights_2","title":"Highlights","text":"<ul> <li>User interface improvements and bug fixes.</li> <li>Much improved legacy code page detection and support.</li> <li>New progressive permissions for enhanced security.</li> <li>New redesign of the Options menu.</li> <li>New ASCII text theme for your own custom background/foreground colours.</li> </ul>"},{"location":"changes/#november-2018","title":"November 2018","text":"<ul> <li>Rewrote the Code Page 437 normaliser, the character conversions are more accurate.</li> <li>RetroTxt gracefully recovers after the unintentional deletion of storage items.</li> <li>RetroTxt out of the box is locked down with gradual permission privileges requests when features are enabled.   Previously RetroTxt always had access to downloads, http/ftp tabs, etc. regardless of whether they were needed or not. However, these are moving to <code>optional_permissions</code> which grant access on an associated Option.</li> <li>Broad <code>http://*/</code> and <code>https://*/</code> read permissions are gone in favour of domain-specific access such as <code>https://retrotxt.com/*</code> and <code>http://retrotxt.com/*</code>.   RetroTxt never read more than the first two characters of any HTML tab that is active, but it was not a good look for new users   seeing Read and change all your data on the websites that you visit in the add-ons menu.</li> <li>Redesigned the Options menu to better match the new user interface introduced in Chrome v69. This required the disabling of the   <code>chrome_style</code> manifest UI option which hasn't been updated since early 2016.</li> <li>Added a privacy policy with API permission requirements.</li> <li>Added Option to use a customised colour set for the text foreground and background.</li> <li>Added IBM's 2017 Plex Mono font.</li> <li>Added Macintosh-Roman, ISO8859-10 code page support.</li> <li>Mouse hovering on the information header font name reveals more descriptive font information.</li> <li>Added Option to toggle blinking text and cursor animations.</li> <li>Added a <code>textmod.es/crew</code> link to SAUCE header data for some ANSI groups when their group data are matches in the SAUCE metadata.</li> <li>Added new icons for Firefox dark themes.</li> <li>Firefox uses SVG icons.</li> <li>Center align text now previews in the sample text.</li> <li>RetroTxt browser toolbar button now behaves differently to avoid occasional false positives. Instead of disabling itself when an invalid page is detected, the button now shows a \u2714 checkmark whenever a compatible tab is active. The compatibility results vary based on the Extension permissions grants.</li> <li>Fixed PCBoard &amp; Wildcat BBS colour inaccuracies in the CSS.</li> <li>Remapped CGA palettes so black is less frequent.</li> <li>Text that lack line breaks now wrap to the browser tab.</li> <li>CSS variables are more frequently in use.</li> <li>Added install type detection that enables a verbose mode when the type is <code>development</code>.</li> <li>Source code uses Prettier for opinionated formatting.</li> <li>Refactored most of the JS to use ES5 Class expressions so the source code easier to follow.   It is still a TODO item for <code>parse_ansi.js</code>.</li> <li>Using separate manifest.json and options.html for Firefox and Chrome. The Chrome Extension API hasn't been updated since early 2016 and is now the legacy implementation.</li> <li>Saves the Options last active tab.</li> <li>Expanded the number of unit tests to cover more of the application.</li> <li>Fixed incorrect keyboard keys displayed on alerts with macOS.</li> <li>Fixed Options icons links with underlined artefacts in Chrome.</li> <li>Fixed Options now gracefully handle the removal of localStorage items.</li> <li>Fixed broken Options links when in <code>development</code> install type.</li> </ul>"},{"location":"changes/#known-issues","title":"Known issues","text":"<ul> <li>Currently, you cannot make additions to the Apply RetroTxt to text files hosted on these websites list. The problem is due to   new permissions API implementation that requires all sites to be listed in the <code>manifest.json</code>.</li> <li>On Firefox 63 the Options fonts menu sprawls across the screen, this is fixed in version 64.</li> <li>On Firefox Linux the Zeus II logo for the welcome screen is broken.</li> <li>For some distributions with Firefox on Linux the select menus have extra large, unreadable fonts.</li> </ul>"},{"location":"changes/#25","title":"2.5","text":""},{"location":"changes/#march-2018","title":"March 2018","text":"<ul> <li>Added Shift JIS support that will toggle the use of the Mona font when encountered.</li> <li>Added an ANSI 80 column wrap checkbox option that lets you disable this feature.</li> <li>Added 2-bit IBM CGA palette 0 (brown/yellow).</li> <li><code>Welcome.html</code> has been reworked and uses tooltips on links.</li> <li>Improved CSS font-stack for system fonts that should look better on all operating systems.</li> <li>Context menu now uses radio buttons instead of tick glyphs.</li> <li>Console output is now grouped and collapsed by default to reduce message spam.</li> <li>Improved rendering of PCBoard art with alternative fonts.</li> <li>Regenerated internal fonts to the <code>woff2</code> format to reduce the download and install size of the Extension.</li> <li>Fixed context menu issues.</li> <li>Fixed unsupported ECMA-48 controls reported as unknown.</li> <li>Fixed blinking cursor not positioning correctly on small ANSI documents.</li> <li>Fixed text render methods not applied to ANSI documents.</li> <li>Fixed white background themes that were not showing ECMA-48 bold text due to foreground and backgrounds colours being the same.</li> </ul>"},{"location":"changes/#24","title":"2.4","text":""},{"location":"changes/#september-2017","title":"September 2017","text":"<ul> <li>Added Linux and IBM PS/2 context menu themes.</li> <li>Added Browser monospace font (called fixed-width in Chrome).</li> <li>ASCII documents now obey SAUCE fontName value.</li> <li>Redesigned some of the context menus.</li> <li>Added a \u25b2 hide \u25bc show toggle for the header.</li> <li>Added 1x and 2x font size adjust toggle in the header.</li> <li>Welcome page displays a RetroTxt updated banner that can also be turned off.</li> <li>Requires Firefox 55.</li> <li>Links in the header are not selectable to stop accidental selection when clicked.</li> <li>Replaced columns/lines statistics in the header with total pixel width/length.</li> <li>Fixed Blink engine handling of ANSI when it mistakenly sees it as ISO-8859-5 instead of Windows-1252.</li> <li>Fixed broken preview images in <code>welcome.html</code>.</li> <li>Fixed SAUCE font issue where it requests Amiga Plus fonts but uses standard.</li> <li>Fixed Some wider fonts break the ASCII text document layout.</li> <li>Fixed SAUCE font P0T-NOoDLE value not registering.</li> <li>ANSI maximum columns are now uncapped when SAUCE <code>TInfo1</code> data is corrupted by the browser.</li> <li>Internal optimisations.</li> <li> <ul> <li>Replaced <code>XMLHttpRequest()</code> with FetchAPI.</li> </ul> </li> <li> <ul> <li>Dropped the generation of elements using <code>dom.innerHTML</code> = text (except in <code>parse_ansi.js</code>).</li> </ul> </li> <li> <ul> <li>Removed all remaining <code>var</code> usage.</li> </ul> </li> <li> <ul> <li>Replaced many <code>let</code> variables with <code>const</code> objects.</li> </ul> </li> <li> <ul> <li>Renamed some variables, so they are clearer in their purpose.</li> </ul> </li> <li> <ul> <li>Removed some unused functions and objects.</li> </ul> </li> </ul>"},{"location":"changes/#23","title":"2.3","text":""},{"location":"changes/#august-2017","title":"August 2017","text":"<ul> <li>Added 24-bit RGB colour support for ANSI/ECMA-48 text. That gives a choice of over 16 million colours to play with.</li> <li>New fonts, a complete set of Amiga and ATASCII (Atari 8-bit).</li> <li>Complete SAUCE FontName support.</li> <li>Added 2-bit IBM CGA magenta palette.</li> <li>Added Option checkbox, 'ANSI iCE colors'.</li> <li>Fixed some CP437 characters not displaying as intended.</li> <li>Fixed issue where 'DOS control glyphs' changes required two tab refreshes to apply.</li> <li>Any discovered SAUCE configurations are sent to the browser console.</li> <li>Browser tab titles running RetroTxt are marked with <code>[\u00b7\u00b7]</code>.</li> </ul>"},{"location":"changes/#22","title":"2.2","text":""},{"location":"changes/#june-2017","title":"June 2017","text":"<ul> <li>There are new clickable toggles in the information header for ANSI art.</li> <li> <ul> <li>Normal switches the active tab text rendering between Normal, Smeared and Shadowed.</li> </ul> </li> <li> <ul> <li>IBM switches the ANSI 16 color palette between IBM VGA, Unix xterm and gray scale.</li> </ul> </li> <li> <ul> <li>On toggles between iCE background colors and blinking text.</li> </ul> </li> <li> <p>Added a new Option, Text render, choices are Normal, Smeared, Shadowed.</p> </li> <li>Increased minimum version requirements for both Chrome and Firefox to 51.</li> <li>Added support for CP-1250 and CP-1251 text encodings that are occasionally used by Chrome over the expected CP-1252.</li> <li>Fixed header not displaying when using white background themes.</li> <li>To improve performance <code>&lt;links&gt;</code> to CSS files are disabled instead of removed when toggling between plain text and HTML displays.</li> <li>The shortcut key combination has been switched from ALT+T to ALT+R to stop Firefox conflicts.</li> <li>Fixed ECMA48 SGR2 and SGR3 controls using the wrong CSS properties.</li> </ul>"},{"location":"changes/#21","title":"2.1","text":""},{"location":"changes/#march-2017","title":"March 2017","text":"<ul> <li>Performance optimisations to reduce the memory footprint and improve rendering speed.</li> <li>ECMA48/ANSI iCE colors support.</li> <li>Automatic parsing and execution of SAUCE ANSiFlags.</li> <li>Added Atari ST TOS font and theme.</li> <li>Text and font information header now conveys more information and uses CSS <code>position: sticky;</code>.</li> <li>JavaScript refactor to be ESlint compliant.</li> <li> <p>Uses more ES6 features such as arrow functions and for-of loops.</p> </li> <li> <p>Improved error handling and user feedback when the addon or Extension API fails.</p> </li> <li> <p>Improved embedded SAUCE detection.</p> </li> <li> <p>Fixed ECMA48/ANSI bug that dropped the first row of text.</p> </li> <li>Fixed mixed ANSI/ASCII documents issue that didn't parse the ECMA48 control characters.</li> <li>Fixed <code>&lt;</code> <code>&gt;</code> and <code>&amp;</code> characters breaking ANSI display thanks to browser HTML entity conversions.</li> <li>Fixed <code>@CLS@</code> bug in PCBoard detection.</li> <li>Fixed <code>HVP</code> and <code>CUP</code> execution.</li> </ul>"},{"location":"changes/#20","title":"2.0","text":""},{"location":"changes/#november-2016","title":"November 2016","text":"<ul> <li>Detects and converts many ANSI Control Sequence Introduces used by MS-DOS ANSI.SYS to display ANSI art.</li> <li>Detects and converts legacy BBS colour codes for PCBoard and Wildcat!.</li> <li>Apply RetroTxt to any text files hosted on these websites will only run on a user supplied whitelist of website domains. This will stop it from conflicting with secure login sessions used by some websites.</li> <li>Options have been reworked with a refresh to its look including the use of the Google Material Icons.</li> <li>Introduced a new, charcoal coloured icon that should clash less with most browser themes.</li> <li>Context menu now allows you to control the page transcoding, currently CP-487, CP-865, ISO-8959-15, CP-1252 character sets are supported.</li> <li>The about encoding content menu has been removed and replaced by the Transcode None option, that works with UTF-8, UTF-16 and ISO-8959-1 text.</li> <li>Automatic detect &amp; run RetroTxt on text files feature has been renamed to Apply RetroTxt to any text files hosted on these websites.</li> <li>Options, font samples now reset when the user's mouse leaves the font selection form.</li> <li>Display formatting control codes as DOS CP-437 glyphs has been renamed to DOS control glyphs.</li> <li>When checked DOS control glyphs will show a few ASCII control characters in the sample text.</li> <li>Refactored much of the JavaScript source to use ECMAScript 6 specific features.</li> <li>Improved handling of file:/// domains.</li> <li>Uses asynchronous <code>XMLHttpRequest.open()</code> functionality as browser support of synchronous requests may end.</li> <li>Context menus now use checkmarks for active options.</li> <li>Context menus code in <code>eventpages.js</code> has been redesigned so it is now easier to add new themes and Display options.</li> <li>The toolbar button should now be more intuitive by more accurately changing its enabled state and refreshing its tip where appropriate.</li> </ul>"},{"location":"changes/#firefox-specific-fixes","title":"Firefox specific fixes","text":"<ul> <li>Requires Firefox 50+.</li> <li>Options dialogue is better themed to Firefox's style guides. (Unfortunately Firefox on Linux still has some strange <code>input</code> style quirks)</li> <li>Fixed Options not supporting UK locales.</li> <li>Fixed first time run bugs that required RetroTxt to reload for it to work correctly.</li> <li>Fixed RetroTxt trying to run on about: URIs.</li> <li>RetroTxt should be slightly less resource intensive as previously there were some event filters that Firefox was ignoring.</li> </ul>"},{"location":"changes/#125","title":"1.25","text":""},{"location":"changes/#2-july-2016","title":"2 July 2016","text":"<ul> <li>Automatic detect &amp; run RetroTxt on text files feature is now more reliable and intuitive. Its (experimental) tag has been dropped and can now be considered stable.</li> <li>Automatic detect &amp; run RetroTxt... also has a hardcoded blacklist of domains to ignore which previously this feature conflicted with.</li> <li>Added QUnit testing. A Tests link to the results page will show up with Chrome in Options when using a development install.</li> <li>Fixed vertical lines artefacts issue with block fonts with most colour combinations.</li> <li>Firefox specific bugs fixed including incorrect <code>normal</code> line height and weird toolbar button behaviour.</li> <li>Refactored a number of function names to be more descriptive of their purpose.</li> <li>Started the transition of replacing <code>var</code> with <code>let</code> and <code>const</code>.</li> <li>Some functions now return more meaningful errors when missing required parameters.</li> </ul>"},{"location":"changes/#12","title":"1.2","text":""},{"location":"changes/#22-june-2016","title":"22 June 2016","text":"<ul> <li>Now works in Firefox but requires at least Firefox (Gecko) 48.</li> <li>Tested in Opera (Blink) and works great.</li> </ul>"},{"location":"changes/#differences-between-using-firefox-and-chrome","title":"Differences between using Firefox and Chrome","text":"<ul> <li>Chrome uses event pages while Firefox uses the less desirable persistent background pages. Event pages only load when needed so in theory they should be less resource intensive.</li> <li>Firefox and the Gecko engine renders multiple block characters better than the Blink engine used in Chrome. The Blink engine adds light but distracting vertical lines.</li> <li>Firefox's Options UI does not support the unified <code>chrome_style</code>.</li> <li>The toolbar button in Firefox does not support right-click context menus.</li> <li>Context menus in Firefox are not filtered by URL types as it doesn't support the <code>documentUrlPatterns</code> property.</li> <li>When loading RetroTxt both Chrome and Firefox will throw warnings about unrecognised items in the manifest.</li> </ul>"},{"location":"changes/#11","title":"1.1","text":""},{"location":"changes/#21-june-2016","title":"21 June 2016","text":"<ul> <li>Added ability to increase the whitespace between rows of text (line space).</li> <li>Rearranged the Options menu to be more compact.</li> <li>Changed the sample text found in the Options menu.</li> <li>Removed the Options, font selection mouse out event to make the font samples more stable.</li> <li>Added IBM BIOS font (only 2y and 2x were previously included).</li> <li>Created this file.</li> </ul>"},{"location":"limitations/","title":"Limitations and known issues","text":"<p>This page contains the known but unfixable problems that may occur using RetroTxt.</p>"},{"location":"limitations/#unsupported-text-formats","title":"Unsupported text formats","text":"<p>Micro-computer era, non-standard ASCII are not supported.</p> <ul> <li>Atari ATASCII</li> <li>Commodore PETSCII</li> </ul> <p>Binary formats such as .xb and .bin are not usable as browsers refuse to display unidentified binary data in a tab.</p> <p>As the browser DOM and HTML are designed for static text, creating text motion and animations would require considerable programming and hacking for little reward.</p>"},{"location":"limitations/#bbs-era-ansi-art","title":"BBS era ANSI art","text":"<p>Many Bulletin Board System era ANSI art relied on an 80x25 fixed terminal with the cursor positioning to create motion and animations that do not convert using RetroTxt, including ANSI animations and music.</p>"},{"location":"limitations/#text-files-that-always-download","title":"Text files that always download","text":"<p>The opinionated browser feature MIME sniffing often overrides RetroTxt, forcing text files to download rather than display in a tab. Nothing can be done to stop this.</p> <p>Chrome and Edge browsers can produce incorrect MIME sniffing results with the <code>file:///</code> protocol.</p>"},{"location":"limitations/#missing-or-invalid-characters","title":"Missing or invalid characters","text":"<p>Text encoded in CP-437 will fail to print several characters in the browser, as it does not support most MS-DOS-era text encodings. Instead, the browser often interprets these texts in a legacy Windows encoding.</p> <p>One of the issues with 8-bit character encodings is that many code pages are missing some of the 256 codepoints. So, while the IBM CP-437 used in many ANSI art pieces retains a complete set of codepoints, the Windows legacy CP-1252 utilized in browsers only presents 251 codepoints, meaning these five character glyphs are lost when swapping between the two.</p> <p>\u00fc \u00a0 \u00ec  \u00a0 \u00c5  \u00a0 \u00c9 \u00a0 \u00a5</p> <p>For example, f\u00fcnf, German for five, is a valid word in CP-437 but breaks as a Windows CP-1252 document.</p> <p> </p> f\u00fcnf viewed as CP-437 (commonly known as OEM-US) <p> </p> f\u00fcnf viewed as Windows-1252"},{"location":"privacy/","title":"Privacy policy","text":""},{"location":"privacy/#retrotxt-does-not-collect-or-transmit-any-data-created-by-your-web-browser","title":"RetroTxt does not collect or transmit any data created by your web browser","text":"<p>All data is stored locally on your computer using the storage.local API.</p>"},{"location":"privacy/#technical","title":"Technical","text":"<p>The <code>ext/manifest.json</code> lists all the Extension permissions RetroTxt requires for operation.</p> manifest.json extraction<pre><code>{\n  \"optional_permissions\": [\"downloads\", \"downloads.open\"],\n  \"permissions\": [\"activeTab\", \"contextMenus\", \"scripting\", \"storage\"],\n}\n</code></pre> <p><code>\"permissions\"</code> contain the required permissions.</p> <p><code>\"optional_permissions\"</code> have the optional permissions.</p>"},{"location":"privacy/#permissions","title":"Permissions","text":"<p>RetroTxt gets these permissions automatically on installation.</p>"},{"location":"privacy/#activetab","title":"<code>\"activeTab\"</code>","text":"<p>It is needed so RetroTxt can read the current URL of the active browser tab and is used to determine:</p> <ol> <li>If the URL is known to the Autorun for websites list.</li> <li>If the URL matches <code>*://retrotxt.com/*</code>.</li> <li>If the file points to a known text filename, such as a file extension <code>.nfo</code> or <code>.txt</code>.</li> </ol>"},{"location":"privacy/#the-read-urls-are-never-saved-or-transmitted","title":"The read URLs are never saved or transmitted","text":""},{"location":"privacy/#contextmenus","title":"<code>\"contextMenus\"</code>","text":"<p>It grants RetroTxt access to the context menus API and allows it to create menus on a browser tab and RetroTxt toolbar icon.</p>"},{"location":"privacy/#scripting","title":"<code>\"scripting\"</code>","text":"<p>Allows RetroTxt to inject and execute JavaScripts and CSS files into a browser tab and transform it into usable HTML.</p>"},{"location":"privacy/#storage","title":"<code>\"storage\"</code>","text":"<p>Grants RetroTxt access to the Storage API and allows it to save and retrieve user Options configurations.</p>"},{"location":"privacy/#optional-permissions","title":"Optional permissions","text":"<p>These permissions toggle when you enable specific RetroTxt Options. The browser will prompt you for a permissions request; if you deny this, the feature will remain off.</p>"},{"location":"privacy/#downloadsdownloadsopen","title":"<code>\"downloads\"</code><code>\"downloads.open\"</code>","text":"<p>Are needed by the Monitor downloads feature. RetroTxt ignores all downloads except those which match these two conditions.</p> <ul> <li>The file has a MIME type of either <code>text/plain</code>, <code>text/x-nfo</code>, <code>text-unknown</code>.</li> <li>The content of the text file does not begin with character combinations usually found in HTML or scripts,  <code>&lt;!</code>, <code>&lt;?</code>.</li> </ul>"},{"location":"host/caddy/","title":"Serve ANSI, ASCII &amp; BBS art","text":"<p>Below is a barebones configuration using Caddy to only to serve files using the URL <code>example.com/ansi/</code>.</p> <p>The served textfiles are located at <code>/var/www/example.com/html</code>.</p> Caddyfile<pre><code>example.com {\n  encode zstd gzip\n\n  handle {\n      redir /ansi /ansi/\n  }\n\n  handle_path /ansi/* {\n    root * /var/www/example.com/html/ansi\n    file_server\n    header {\n      Content-Type \"text/plain; charset=iso-8859-1\"\n      X-Content-Type-Options nosniff\n    }\n  }\n}\n</code></pre> Encode<pre><code>example.com {\n  encode zstd gzip\n</code></pre> <p>The <code>encode</code> directive compresses the served files using the Zstandard and Gzip algorithms to reduce the file size and speed up the text file downloads.</p> Handle path<pre><code>  handle_path /ansi/* {\n    root * /var/www/example.com/html/ansi\n    file_server\n</code></pre> <p>The <code>handle_path</code> directive applies the configuration to all files using the path <code>/ansi/*</code>.</p> Root<pre><code>  handle_path /ansi/* {\n    root * /var/www/example.com/html/ansi\n    file_server\n</code></pre> <p>The <code>root</code> paired with the <code>file_server</code> directive sets the (virtual) root directory to <code>/var/www/example.com/html/ansi</code>.</p> Content type<pre><code>    header {\n      Content-Type \"text/plain; charset=iso-8859-1\"\n      X-Content-Type-Options nosniff\n    }\n</code></pre> <p>The <code>header</code> directive combined with the <code>Content-Type \"text/plain; charset=iso-8859-1\"</code> block adds a response header to tell the browser to treat the file as plain text encoded as ISO-8859-1, a legacy character set RetroTxt can understand. You cannot use CP-437 or other DOS code pages as they are not valid browser encodings.</p> No sniff<pre><code>    header {\n      Content-Type \"text/plain; charset=iso-8859-1\"\n      X-Content-Type-Options nosniff\n    }\n</code></pre> <p>The <code>X-Content-Type-Options nosniff</code> directive adds the response header to tell browsers not to sniff the content. MIME sniffing often inaccurately treats ANSI and other encoded text as binary files browsers download.</p>"},{"location":"host/nginx/","title":"Serve ANSI, ASCII &amp; BBS art","text":"<p>Below is a barebones configuration to serve plain text files using Nginx.</p> <p>The <code>location</code> block applies the configuration only to files using the path <code>http://example.com/ansi</code>.</p> <p>The served textfiles are in <code>/var/www/example.com/html</code>.</p> nginx.conf<pre><code>server {\n    listen 80;\n    root /var/www/example.com/html;\n\n    location /ansi {\n        charset \"ISO-8859-1\";\n        add_header Content-Disposition \"inline\";\n        add_header X-Content-Type-Options \"nosniff\";\n        types {\n            text/plain asc ans txt;\n        }\n    }\n}\n</code></pre> Types<pre><code>location /ansi {\n    types {\n        text/plain asc ans txt;\n    }\n}\n</code></pre> <p>The <code>types</code> block further filter files to those utilising an <code>.asc</code> <code>.ans</code> or <code>.txt</code> file extension.</p> Charset<pre><code>location /ansi {\n    charset \"ISO-8859-1\";\n}\n</code></pre> <p>The <code>charset \"ISO-8859-1\"</code> directive combined with the <code>types { text/plain }</code> block adds a <code>Content-Type:text/plain; charset=ISO-8859-1</code> response header.</p> <p>It tells the browser to treat the file as plain text encoded as ISO-8859-1, a legacy character set RetroTxt can understand. You cannot use CP-437 or other DOS code pages as they are not valid browser encodings.</p> Content disposition<pre><code>location /ansi {\n    add_header Content-Disposition \"inline\";\n}\n</code></pre> <p>The <code>add_header Content-Disposition \"inline\";</code> directive adds a <code>Content-Disposition:inline</code> response header that tells the browser to display the content in a tab.</p> No sniff<pre><code>location /ansi {\n    add_header X-Content-Type-Options \"nosniff\";\n}\n</code></pre> <p>The <code>add_header X-Content-Type-Options \"nosniff\";</code> directive adds the <code>X-Content-Type-Options:nosniff</code> response header to tell browsers not to sniff the content.</p> <p>MIME sniffing often inaccurately treats ANSI and other encoded text as binary files browsers download. Unfortunately, Firefox ignores this header request.</p> <p> </p> Response headers"},{"location":"specs/ansi/","title":"ANSI / ECMA-48 support","text":"<p>ECMA-48 forms the basis of ISO 6429, the current acceptable standard for text control sequences, and expands on ANSI X3.64<sup>4</sup>, which first popularised escape sequences in the late 1970s with the DEC VT100 computer.</p> <p>The following chart lists the limited ECMA-48 number of sequences that RetroTxt supports.</p> Control Acronym Value Support Notes Cursor Forward Tabulation CHT Yes Acts as 4 forward movements Cursor Down CUD Yes Cursor Forward CUF Yes Cursor Position CUP Partial Supports forward and down only Erase in Display ED to end of page ED <code>0</code> Partial Only goes to the end of the line to beginning of page ED <code>1</code> Yes erase all ED <code>2</code> Yes Erase in Line EL to end of line EL <code>0</code> Yes erase line to cursor EL <code>1</code> No erase whole line EL <code>2</code> Yes Horizontal Vertical Position HVP Partial Supports forward and down only Select Graphic Rendition bold SGR <code>1</code> Yes faint SGR <code>2</code> Yes italic SGR <code>3</code> Yes underline SGR <code>4</code> Yes blink slow SGR <code>5</code> Yes blink fast SGR <code>6</code> Yes inverse SGR <code>7</code> Yes conceal SGR <code>8</code> Yes crossed out SGR <code>9</code> Yes font normal SGR <code>10</code> Yes alternative font 1 SGR <code>11</code> Yes IBM BIOS alternative font 2 SGR <code>12</code> Yes IBM CGA alternative font 3 SGR <code>13</code> Yes IBM CGA thin alternative font 4 SGR <code>14</code> Yes Commodore Amiga Topaz alternative font 5 SGR <code>15</code> Yes IBM EGA 8x14 alternative font 6 SGR <code>16</code> Yes IBM EGA 9x14 alternative font 7 SGR <code>17</code> Yes IBM VGA 8x14 alternative font 8 SGR <code>18</code> Yes IBM VGA 9x14 alternative font 9 SGR <code>19</code> Yes IBM MDA Fraktur font SGR <code>20</code> Yes Germanic Gothic fontEagle Spirit PC Alt 3 fantasy inspired font double underline SGR <code>21</code> Yes not bold nor faint SGR <code>22</code> Yes not italic nor Fraktur SGR <code>23</code> Yes not underline SGR <code>24</code> Yes steady SGR <code>25</code> Yes No blinking positive image SGR <code>27</code> Yes Not inverse revealed characters SGR <code>28</code> Yes Not concealed not crossed out SGR <code>29</code> Yes foreground colors SGR <code>30</code>\u2026<code>37</code> Yes foreground 256 colors<sup>1</sup> SGR <code>38;5;0</code>\u2026<code>255</code> Yes foreground RGB colors<sup>2</sup> SGR <code>38;2;R;G;B;</code> Yes revert to default foreground SGR <code>39</code> Yes background colors SGR <code>40</code>\u2026<code>47</code> Yes background 256 colors<sup>1</sup> SGR <code>48;5;0</code>\u2026<code>255</code> Yes background RGB colors<sup>2</sup> SGR <code>48;2;R;G;B;</code> Yes revert to default background SGR <code>49</code> Yes framed SGR <code>51</code> Yes encircled SGR <code>52</code> Yes overlined SGR <code>53</code> Yes not framed nor encircled SGR <code>54</code> Yes not overlined SGR <code>55</code> Yes bold foreground colors<sup>3</sup> SGR <code>90</code>\u2026<code>97</code> Yes bright background colors<sup>3</sup> SGR <code>100</code>\u2026<code>107</code> Yes Requires iCE colors to be enabled <ol> <li> <p>Known as xterm 256 it is not an ECMA-48 standard.\u00a0\u21a9\u21a9</p> </li> <li> <p>Allows for ISO-8613-3 24-bit color support, but it is not an ECMA-48 standard.\u00a0\u21a9\u21a9</p> </li> <li> <p>Non-standard aixterm, IBM AIX terminal support.\u00a0\u21a9\u21a9</p> </li> <li> <p>Widthdrawn in 1997.\u00a0\u21a9</p> </li> </ol>"},{"location":"specs/ansi_sys/","title":"ANSI.SYS support","text":"<p>Microsoft's MS-DOS ANSI.SYS driver supported a limited subset of ANSI X3.64 control sequences and introduced several non-standard functions. ANSI art generally uses sequences that target the ANSI.SYS implementation of text controls. RetroTxt recognizes all ANSI.SYS controls sequences but skips those that it doesn't support.</p> Control Support Notes Cursor Position Partial Supports forward and down only Cursor Up No Cursor Down Yes Cursor Forward Yes Cursor Backward No Save cursor position No Restore cursor position No Erase display Yes Erase line Yes Set Graphics Mode Yes All colours and attributes are supported Set Mode / Reset Mode Yes RetroTxt changes the font type and column width but does not attempt to simulate the screen resolution Set Mode / Reset Mode 7 Yes Set and disable line wrapping Set Keyboard Strings No"},{"location":"specs/bbs/","title":"BBS color codes","text":"<p>BBS color codes from the 1980s and early 1990s were a means of applying color to text served in the user interfaces of Bulletin Board Systems.</p> Format Support Example Celerity pipe | codes Yes <code>|k|w</code> PCBoard <code>@</code> codes Yes <code>@X0F</code> Renegade pipe | codes Yes <code>|15|16</code> Synchronet <code>\u263a</code> codes<sup>1</sup> No Telegard ` codes Yes Wildcat! <code>@</code> codes Yes WWIV heart <code>\u2665</code> codes<sup>2</sup> Yes WWIV pipe |# codes Yes WWIV pipe | colors Yes <code>|15|16</code> <ol> <li> <p>It uses the ASCII C0 <code>SOH</code> control, aka <code>/x01</code> \u21a9</p> </li> <li> <p>It uses the ASCII C0 <code>ETX</code> control, aka <code>/x03</code> \u21a9</p> </li> </ol>"},{"location":"specs/controls/","title":"Control sequences","text":"<p>Control sequences are strings of characters embedded into the text as the cursor, display, and presentation functions.</p> <p>ANSI control</p> <p>An example of an ANSI escape sequence to set a white font and black background color.</p> <pre><code>\u2190[0;37;40m\n</code></pre> <p>ANSI art uses control sequences for its colorization and cursor positioning, as do remote terminals used by many Linux and Unix tools such as xterm.</p> Common name Official Partial support Notes DOS ANSI ANSI.SYS Yes An Microsoft DOS system driver commonly used with ANSI art ASCII C0 ECMA-6<sup>1</sup> Yes Also known as ASCII control codes ANSI ECMA-48<sup>2</sup> Yes Also known as ANSI escape codes <ol> <li> <p>Historically known as ANSI X3.4.\u00a0\u21a9</p> </li> <li> <p>Traditionally known as ANSI X3.64, VT-100, or ISO 6428\u00a0\u21a9</p> </li> </ol>"},{"location":"specs/cp/","title":"Codepages and text encodings","text":"<p>Regardless of the source, JavaScript (JS) converts all the text it handles into UTF-16.</p> <p>UTF-16 is based on Unicode and is compatible with UTF-8 and backward compatible with ISO-8859-1 and US-ASCII.</p> <p>But otherwise, all other loaded text must be transcoded to accurately display the characters.</p> Character set Support About US-ASCII<sup>1</sup> Yes <sup>4</sup> The original text encoding of the Internet CP-437 Mimic The most common encoding for ASCII, ANSI art, and text for PC and MS-DOS CP-1252<sup>2</sup> Mimic The default English encoding for legacy Windows<sup>3</sup> is backward compatible with ISO-8859-1 ISO-8859-1 Yes <sup>4</sup> The replacement for US-ASCII that supported two times the characters and was the default encoding for the Commodore Amiga and legacy Linux ISO-8859-15 Mimic An update for ISO-8859-1 that added some missing characters such as the <code>\u20ac</code> Euro sign SHIFT JIS Yes <sup>4</sup> A legacy Japanese encoding used by Shift JIS art UTF-8 Yes <sup>4</sup> The current standard encoding for modern HTML and most documents it supports over a hundred thousand characters UTF-16 Yes <sup>4</sup> The Unicode implementation used by JavaScript and common for documents not written in the Latin alphabet CP-1250CP-1251ISO-8859-5 Yes <sup>4</sup> Encodings that are mistakenly used by Chromium when viewing ANSI and ASCII art <ol> <li> <p>Historically known as ANSI X3.4 or ISO 646.\u00a0\u21a9</p> </li> <li> <p>Also called Windows-1252 or Windows ANSI.\u00a0\u21a9</p> </li> <li> <p>Created in 1985 for Microsoft Windows 1.0, it was revised in multiple releases of Windows, including Windows 95 and 98.\u00a0\u21a9</p> </li> <li> <p>The browser natively handles this character set.\u00a0\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9</p> </li> </ol>"},{"location":"specs/misc/","title":"Miscellaneous support","text":"<p>Other common, non-standard sequences the ANSI community uses.</p> Control Value Support background RGB colours <code>0;R;G;Bt</code> Yes<sup>1</sup> foreground RGB colours <code>1;R;G;Bt</code> Yes<sup>1</sup> Blink to Bright Intensity Background <code>?33h</code> Yes<sup>2</sup> Blink normal <code>?33l</code> Yes<sup>2</sup> <ol> <li> <p>PabloDraw 2014 - 24-bit ANSI \u21a9\u21a9</p> </li> <li> <p>SyncTERM \u21a9\u21a9</p> </li> </ol>"},{"location":"specs/sauce/","title":"SAUCE support","text":"<p>SAUCE, created by Olivier Reubens<sup>1</sup> is a metadata protocol for scene artworks. RetroTxt parses these to determine text formatting and authorship results shown in the Text &amp; font information header.</p> Name Interpreted Displayed Notes ID Yes No Version Yes No Title Yes Yes Author Yes Yes Group Yes Yes Date Yes Yes FileSize No DataType No FileType No TInfo1 Partial Yes When found, is used to set the character width<sup>2</sup> TInfo2 No TInfo3 No TInfo4 No Comments Yes Yes TFlags Partial Yes See ANSI flags below TInfoS Partial Yes"},{"location":"specs/sauce/#ansi-flags","title":"ANSI flags","text":"<p>ANSIFlags allow an author of ANSI and similar files to provide a clue to a viewer/editor on how to render the image.</p> Flag Name Used B Non-blink mode<sup>3</sup> Yes LS Letter-spacing Yes AR Aspect Ratio No <ol> <li> <p>\"Tasmaniac\" of ACiD.\u00a0\u21a9</p> </li> <li> <p>Columns of text.\u00a0\u21a9</p> </li> <li> <p>Also known as iCE colors.\u00a0\u21a9</p> </li> </ol>"},{"location":"src/","title":"Install and usage","text":"<p>This page instructs how to use and build the source code for Chrome or Edge. RetroTxt employs a restrictive open-sourced license with the code available on GitHub.</p> <p>Visual Studio Code is used to create RetroTxt.It includes optional <code>.vscode</code> conveniences, such as workspace settings and extension recommendations.</p> <p>You'll require installing the following command line applications to download and initialize the repository.</p> <ul> <li>git the distributed version control software</li> <li>Node.js an open-source, cross-platform JavaScript runtime environment</li> <li>pnpm an efficient package manager for Node.js</li> <li>Task a task runner / build tool that aims to be simpler and easier to use</li> </ul>"},{"location":"src/#clone-the-repo","title":"Clone the repo","text":"<p>Download and copy the RetroTxt repository to the current directory.</p> <pre><code>git clone https://github.com/bengarrett/RetroTxt.git\n</code></pre>"},{"location":"src/#install-the-dependencies","title":"Install the dependencies","text":"<p>RetroTxt has a few third-party dependencies and tools for initialization in the repository.</p> <pre><code># Change to the RetroTxt directory\ncd RetroTxt\n\n# Install the dependencies\npnpm install\n\n# Initialize the RetroTxt Extension\ntask dep-install\n</code></pre>"},{"location":"src/#optional-edit-the-manifest-file","title":"(optional) Edit the manifest file","text":"<p>Some may wish to edit the Extension manifest containing the base configuration, permissions, and metadata for RetroTxt.</p> <pre><code>  \"host_permissions\": [\n    \"*://*.retrotxt.com/*\",\n    \"https://*/\",\n    \"http://*/\",\n    \"file://*/\"\n  ],\n</code></pre> <p>The <code>RetroTxt/ext/manifest.json</code> file contains the configuration and metadata for RetroTxt.</p>"},{"location":"src/#run-the-source-code","title":"Run the source code","text":"<p>I suggest that you create a new user profile for the Extension. Open a new tab with the address of the Extensions features.</p> <p>The <code>chrome://extensions/</code> address will work in other browsers such as Edge</p> <pre><code>chrome://extensions/\n</code></pre> <ol> <li>In the Extensions tab, toggle Developer mode</li> <li>Click the Load unpacked button</li> <li>Navigate to the directory containing the <code>RetroTxt/ext/</code> repository and select OK</li> </ol> <p>RetroTxt should load, and the Extension reload button can apply source code changes.</p> <p></p>"},{"location":"src/build/","title":"Source code building tips","text":""},{"location":"src/build/#initialize","title":"Initialize","text":"<p>Clone the repository.</p> gitgh <pre><code>git clone https://github.com/bengarrett/RetroTxt.git\n</code></pre> <pre><code>gh repo clone bengarrett/RetroTxt\n</code></pre> Initialize the build<pre><code>cd RetroTxt\ntask init\n</code></pre>"},{"location":"src/build/#branching-and-pull-request","title":"Branching and pull request","text":"Create a new branch named dev<pre><code>git checkout -b dev\n</code></pre> Create a pull request to merge the dev branch into main<pre><code>gh pr create\ngh pr status\ngh pr merge\n</code></pre>"},{"location":"src/build/#update-packages","title":"Update packages","text":"<p>Use pnpm update.</p> <pre><code>pnpm update --interactive\npnpm update --latest\npnpm update --prod\npnpm update --dev\n</code></pre> <p>Use Task to update the RetroTxt dependencies.</p> <pre><code>task dep-update\n</code></pre>"},{"location":"src/build/#browser-addon-stores","title":"Browser addon stores","text":"Location of builds<pre><code>RetroTxt/web-ext-artifacts/\n</code></pre> <ul> <li>Chrome developer dashboard for the Chrome Web Store</li> <li>Microsoft Edge Developer for Microsoft Edge Add-ons</li> <li>Firefox Add-on developer hub for Firefox Add-ons</li> </ul>"},{"location":"src/files/","title":"Files and directories","text":"<p>These are the directories and files that comprise of RetroTxt source code.</p> <p>Items ending with a forward-slash <code>/</code> are directories Items starting with a dot <code>.</code> are flagged as hidden</p> <p>The <code>ext/fonts/</code> directory contains fonts that are not compatible with the LGPL-3.0 license and cannot be used in other projects.</p> Directory Purpose <code>.github/</code> GitHub repository configurations <code>.vscode/</code> Visual Studio Code workspace settings <code>docs/</code> This documentation written in mkdocs markdown <code>ext/</code> The RetroTxt Extension root directory <code>fonts/</code> Original font packages with documentation and licences <code>site/</code> Documentation built by <code>mkdocs</code> into a website File Purpose <code>.editorconfig</code> EditorConfig settings file <code>.gitattributes</code> The Git settings file for this repository <code>.gitignore</code> The Git file to exclude items from being recorded <code>.prettierrc</code> Prettier configuration file <code>eslint.config.mjs</code> ESLint configuration file <code>LICENSE</code> A copy of the GNU Lesser General Public License, Version 3 <code>mkdocs.yml</code> mkdocs configuration file <code>package.json</code> Pnpm configuration file <code>pnpm-lock.yml</code> Pnpm lockfile <code>Taskfile.yml</code> Task configuration file Stylesheet Purpose <code>ext/css/</code> Extension Cascading Style Sheets in CSS3 syntax \u21b3 <code>bulma.min.css</code> Bulma CSS framework used by the Options tab \u21b3 <code>fonts_home.css</code> Font faces and classes for the Home computers fonts \u21b3 <code>fonts_ibm-scale-9x.css</code> Transformations for some 9px IBM PC &amp; family fonts \u21b3 <code>fonts_ibm.css</code> Font faces and classes for the IBM PC &amp; family fonts \u21b3 <code>fonts_modern.css</code> Font faces and classes for the Modern fonts \u21b3 <code>layout.css</code> Base elements styles \u21b3 <code>options.css</code> Styles specific for the Options tab \u21b3 <code>retrotxt_loader.css</code> An animated spinner to display during the RetroTxt processing \u21b3 <code>retrotxt.css</code> Scanlines, text size, the Mona font face and cursor stylings \u21b3 <code>text_animation-off.css</code> For the Blinking cursor and text off Option \u21b3 <code>text_colors_4bit-ice.css</code> ANSI Select Graphic Rendition iCE Color classes \u21b3 <code>text_colors_4bit.css</code> ANSI Select Graphic Rendition colour classes \u21b3 <code>text_colors_8bit.css</code> Xterm 256 colours for ANSI colour classes \u21b3 <code>text_colors_bbs.css</code> Shared BBS colours and font styles \u21b3 <code>text_colors_blink.css</code> Simulate terminal blinking text \u21b3 <code>text_colors_c64.css</code> Commodore 64 ANSI color pallete \u21b3 <code>text_colors_cga_0.css</code> CGA 0 ANSI color pallete \u21b3 <code>text_colors_cga_1.css</code> CGA 1 ANSI color pallete \u21b3 <code>text_colors_gray.css</code> Monochrome ANSI color pallete \u21b3 <code>text_colors_iigs.css</code> Apple IIGS ANSI color pallete \u21b3 <code>text_colors_pcboard.css</code> PCBoard BBS colour classes \u21b3 <code>text_colors_pipe.css</code> Renegade BBS and other BBS software colours \u21b3 <code>text_colors_vga.css</code> VGA ANSI color pallete \u21b3 <code>text_colors_white_bg-fixes.css</code> Fixes for white background themes <code>windows</code> and <code>atarist</code> \u21b3 <code>text_colors_workbench.css</code> Amiga Workbench ANSI color pallete \u21b3 <code>text_colors_wviv-pipe.css</code> WVIV BBS and other BBS software colours \u21b3 <code>text_colors_xterm.css</code> Xterm ANSI color pallete \u21b3 <code>text_colors.css</code> Colours, text pair classes \u21b3 <code>text_ecma_48.css</code> ANSI Select Graphic Rendition function classes \u21b3 <code>text_pagewrap.css</code> For the ANSI Page wrap on option Script Purpose <code>ext/scripts/</code> Manifest V3 Extension scripts \u21b3 <code>checks.js</code> Error, argument checkers and alerts \u21b3 <code>encoding.js</code> Character sets, browser encodings, code page handlers \u21b3 <code>helpers.js</code> Content-scripts helper, shared functions \u21b3 <code>options.js</code> Isolated functions for the Options page located at <code>ext/html/options.html</code> \u21b3 <code>parse_ansi.js</code> Functions to handle ANSI and ECMA-48 controls \u21b3 <code>parse_dos.js</code> Functions to handle text encodings and DOS code pages \u21b3 <code>popup.js</code> Isolated functions for the Toolbar popup page located at <code>ext/html/popup.html</code> \u21b3 <code>retrotxt.js</code> Content-script to apply RetroTxt to a browser tab DOM, or restore the tab to its original raw text state <code>ext/scripts/sw/</code> Manifest V3 service workers \u21b3 <code>background.js</code> Background service worker functions and <code>importScripts</code> \u21b3 <code>downloads.js</code> Apply RetroTxt transformations to text file downloads \u21b3 <code>error.js</code> Service worker error handlers \u21b3 <code>extension.js</code> RetroTxt initialisation, defaults and activation \u21b3 <code>helpers.js</code> Service worker helper, shared functions \u21b3 <code>menu.js</code> RetroTxt (right-click) context menus \u21b3 <code>message.js</code> Make service worker connections that can receive commands from the container-scripts \u21b3 <code>omnibox.js</code> Address bar omnibox input to handle terminal like commands \u21b3 <code>security.js</code> Web extension API restriction checks and permission grants \u21b3 <code>session.js</code> Uses the local storage API to simulate a session storage store \u21b3 <code>storage.js</code> RetroTxt settings and configurations store \u21b3 <code>tabs.js</code> Monitors and handles the interactions with new and closed browser tabs \u21b3 <code>toolbar.js</code> Toolbar button icon and badge Extension item Purpose <code>ext/.web-ext-chrome.js</code> The web-ext configuration file for packaging a Chrome distribution package <code>ext/manifest.json</code> An Extension manifest file containing read-only metadata and configuration options <code>ext/_locales/</code> Spelling differences for the UK and US English \u21b3 <code>en_GB/messages.json</code> Shared variables British UK spelling and names \u21b3 <code>en_US/messages.json</code> Shared variables for remote URLs and BBS software names <code>ext/assets/</code> PNG icons for RetroTxt \u21b3 <code>snaps/</code> PNG screenshots used by the Options samples tab \u21b3 <code>svg/material-icons.svg</code> SVG icons for the Options tab <code>ext/fonts/</code> Compressed fonts used by RetroTxtThese are not compatible with the LGPL-3.0 license and cannot be used in other projects <code>ext/html/</code> HTML5 assets \u21b3 <code>options.html</code> Template for the Options page \u21b3 <code>popup.html</code> Template for the Toolbar popup page <code>ext/json/</code> JSON, human-readable data stores \u21b3 <code>font_info.json</code> Font metadata for The Ultimate Oldschool PC Font Pack (v2.2)Required by retrotxt-fonts <code>ext/test/</code> Unit and sample test files \u21b3 <code>example_files/</code> ASCII and ANSI text test cases for use with the <code>files:///</code> protocol \u21b3 <code>example_files/bbs_sheets/</code> BBS text test cases for use with the <code>files:///</code> protocol \u21b3 <code>index.html</code> Entry point for the QUnit tests \u21b3 <code>qunit.css</code> QUnit stylesheet \u21b3 <code>qunit.js</code> QUnit JS testing framework application \u21b3 <code>tests-*.js</code> QUnit tests"},{"location":"src/font/","title":"Font conversion","text":"<p>The <code>ext/fonts/</code> directory contains fonts that are not compatible with the LGPL-3.0 license and cannot be used in other projects.</p>"},{"location":"src/font/#web-open-font-format-2","title":"Web Open Font Format 2","text":"<p>RetroTxt relies on Truetype or OpenType web fonts in the WOFF2<sup>1</sup> format that offers the best compression to reduce the overall download and memory-use.</p> <p>The WOFF2<sup>1</sup> format is relatively new, and many font distributions do not offer it. Older formats must first be converted to add these fonts to RetroTxt.</p>"},{"location":"src/font/#webassembly-ttf-to-woff2","title":"WebAssembly TTF to WOFF2","text":"Convert a Truetype font into WOFF2<pre><code>cd RetroTxt\npnpm run font fontname.ttf fontname.woff2\n</code></pre> <p>Tip for Windows</p> <p>Windows users may need to update the font script in the <code>package.json</code> file.</p> OriginalEdit <pre><code>\"scripts\": {\n  \"font\": \"woff2_compress.js\"\n},\n</code></pre> <pre><code>\"scripts\": {\n  \"font\": \"woff2_compress.js.cmd\"\n},\n</code></pre>"},{"location":"src/font/#font-tools","title":"Font tools","text":""},{"location":"src/font/#online-generators","title":"Online generators","text":"<ul> <li>Font Squirrel Webfont Generator</li> <li>transfonter Webfont generator</li> </ul>"},{"location":"src/font/#online-metadata","title":"Online metadata","text":"<ul> <li>FontDrop!</li> </ul>"},{"location":"src/font/#universal-font-conversion","title":"Universal font conversion","text":"<ul> <li>TransType (paid)</li> </ul>"},{"location":"src/font/#woff2-font-conversion","title":"WOFF2 font conversion","text":"<ul> <li>google/woff2</li> </ul> <ol> <li> <p>Web Open Font Format 2.0 \u21a9\u21a9</p> </li> </ol>"},{"location":"src/library/","title":"Libraries in use","text":""},{"location":"src/library/#package-management","title":"Package management","text":"<p>The pnpm application, known for its speed and compactness, is a drop-in replacement for [npm](https://www.npmjs.com/ and is compatible with the universal\u00a0<code>package.json</code>\u00a0file.</p>"},{"location":"src/library/#build-tool","title":"Build tool","text":"<p>The terminal\u00a0Task application is a runner and software build tool that is a single point for all the functions needed to build the web extension.</p> <pre><code>$ cd RetroTxt\n$ task --list\n\ntask: Available tasks for this project:\n* build:               Creates the submission package for Chrome.\n* checks:              heck, run and print the versions of the task commands and dependencies.\n* default:             List the available tasks.\n* dep-copy:            Copies the dependencies from `node_modules` over to the `ext` directory.\n* dep-install:         Installs both the dependencies and dev-dependencies contained in the package.json.\n* dep-update:          Updates all dependencies to the latest version and copies them to the `ext` directory.\n* docs-build:          Build the current documentation in use on https://docs.retrotxt.com.\n* docs-serve:          Run an internal server to view the documentation in `docs`.\n* lint:                Lint the JavaScript files in the `ext` directory.\n</code></pre>"},{"location":"src/library/#documentation","title":"Documentation","text":"<p>This text and all documentation are in Markdown. The documents are converted into HTML using the MkDocs static site generator, which is geared towards software documentation. The generated HTML is then hosted on GitHub Pages and is available at https://docs.retrotxt.com.</p>"},{"location":"src/library/#bulma","title":"Bulma","text":"<p>Bulma (<code>bulma.min.css</code>) is a lightweight CSS framework used by the Options Page of the web extension. While large at 650 KB, this size doesn't matter when used within a web extension loaded locally by the browser.</p> <p>Bulma offers logical class naming conventions and extensive and responsive layout theming.</p>"},{"location":"src/library/#dom-purify","title":"DOM purify","text":"<p>DOM purify (<code>purify.js</code>) is used to sanitize and prevent XSS attacks using innerHTML property values based on text loaded from unknown files and websites.</p>"},{"location":"src/library/#linkifyjs","title":"LinkifyJS","text":"<p>Linkify (<code>linkify.js</code>) is an optional feature for users to find links within plain text and convert them to HTML anchor link tags. It automatically stresses URLs, social media #hashtags, @mentions, and emails.</p> <p>While Linkify detects links in plain text, the code uses the <code>linkify-element</code> library to replace links within native DOM elements.</p> <p>The Linkify IP Address Plugin (<code>linkify-plugin-ip</code>) supports detecting IPv4 and some limited IPv6 addresses.</p>"},{"location":"src/library/#qunit","title":"QUnit","text":"<p>QUnit (<code>qunit.js</code>, <code>qunit.css</code>) provides unit testing for standalone helper functions and classes within the JS codebase. The coverage for tests could be better, and user interface features of the web extension remain without automated testing.</p> <p>QUnit has a relatively easy syntax and shows the results of the tests in the browser.</p>"},{"location":"src/library/#internal-libraries","title":"Internal libraries","text":""},{"location":"src/library/#ajv","title":"Ajv","text":"<p>Ajv (<code>ajv.js</code>) is the JSON schema validator that some other libraries use.</p>"},{"location":"src/library/#dot-json","title":"dot-json","text":"<p>dot-json provides the means to edit a JSON file using the command line. In the code, the library updates the version values of the web extension <code>manifest.json</code> and the <code>package.json</code> package management files.</p>"},{"location":"src/library/#eslint","title":"ESlint","text":"<p>ESLint finds and fixes problems with the JS code. It is popular within the coding community, and all JS code is valid against it.</p> <p>ESLint is a tool for identifying and reporting on patterns found in ECMAScript/JavaScript code, with the goal of making code more consistent and avoiding bugs.</p> <p>The <code>eslint.config.mjs</code> file configures ESLint to be compatible with the Prettier source code formatting library and support Manifest V3 specific JS features.</p>"},{"location":"src/library/#prettier","title":"Prettier","text":"<p>Prettier is an opinionated CSS, HTML, JS, and markdown source code formatter. All the default format and syntax settings are in use except for the print semicolumns in the JS option, which is off.</p>"},{"location":"src/library/#shx","title":"shx","text":"<p>shx allows the running of shell commands in both JS and Node.JS. shx is used to file copy dependencies from the npm <code>node_modules/</code> package directories to the sub-directories of the web extension.</p>"},{"location":"src/library/#wawoff2","title":"wawoff2","text":"<p>wawoff2 is a WOFF font converter that runs in the terminal to handle older font packages that do not contain the WOFF2 format that offers better file compression.</p> <p>All browsers used by the web extension support WOFF2, and the format offers better compression than the older WOFF or TTF. With the large number of fonts used by the web extension, better compression leads to a smaller package size and download.</p>"},{"location":"src/library/#web-ext","title":"Web-ext","text":"<p>Web-ext is by Mozilla, the creators of the Firefox browser, and is used to build a compressed zip package that gets submitted to the Chrome and Microsoft web extension stores.</p> <p>A simple configuration file can be found in <code>.web-ext-chrome.js</code>.</p> <p>The web-ext command reference is available for more information.</p>"},{"location":"src/mv3/","title":"Manifest V3 usage","text":"<p>Manifest V3 is Google's replacement API for third-party Extensions on the Chromium web engine. The announcement meant the retirement of the long-established Manifest V2 Extensions for all Chromium browsers. RetroTxt 5 uses Manifest V3, while prior editions use Manifest V2.</p> <p>Firefox has limited support for Manifest V3, and there is no priority or a timeline for its full implementation.</p>"},{"location":"src/mv3/#benefits-for-retrotxt","title":"Benefits for RetroTxt","text":"<p>Despite the negative attention from the technology press about Google and ad-blocking, the Manifest version 3 comes with several benefits for RetroTxt.</p> <ol> <li>The use of service workers that make the source code easier to layout and debug. RetroTxt v5 is now more resilient, and the migration fixed some previously hard-to-trace behavior bugs.</li> <li>Service workers also mean future features will be simpler to implement and test.</li> <li>Unfocused tabs can run the RetroTxt process while in the background.</li> <li>Offers an improved and safer permissions system, which means RetroTxt can work out of the box with less scary-looking permissions requests.</li> </ol>"},{"location":"src/pattern/","title":"Program patterns","text":""},{"location":"src/pattern/#code-encoding","title":"Code encoding","text":"<p>All web extension code, including JS, CSS, and HTML, should be encoded as UTF-8 using Unix-style LF (line-feed) newline controls.</p>"},{"location":"src/pattern/#parsing-escape-codes-complexity","title":"Parsing escape codes complexity","text":"<p>The terms ANSI escape codes or sequences get given to plain text documents embedded with special terminal text stylizations and controls. Long formalized into several technical standards such as ANSI X3.64, ISO/IEC 6429, and EMCA-48, they are commonly but inaccurately referred to as ANSI text.</p> <p>The ANSI escape paradigm originates from the 1970s in a very different computing landscape when file and memory size reduction trumped usability. Unlike modern HTML syntax, there is no identifier to finish or close text stylizations or formatting changes.</p> <p>Instead, when parsing text, one must look ahead through the code for control modifiers that affect the existing stylizations. Unfortunately, these closing modifiers may be deep within the text document or not provided.</p> <p>For example, in HTML, you wrap the bold text around a pair of <code>&lt;strong&gt;&lt;/strong&gt;</code> tags. In markdown, the same boldness can be done using a set of <code>__</code> or <code>**</code> characters.</p> <pre><code>&lt;strong&gt;This is bold text&lt;/strong&gt;\n&lt;br&gt;\n&lt;strong&gt;This is strong &lt;em&gt;and stresses emphasis&lt;/em&gt;&lt;/strong&gt;\n&lt;br&gt;\nHTML can be &lt;span style=\"color: red;\"&gt;red&lt;/span&gt;,\n&lt;span style=\"color: green;\"&gt;green&lt;/span&gt;,\nor &lt;span style=\"color: yellow;\"&gt;yellow&lt;/span&gt;.\n</code></pre> <pre><code>__This is bold text__\n**This is bold text**\n_This is italicized text_\n___This is bold and italicized text___\n</code></pre> <p>But for (ANSI) escape-encoded text, the escape code value <code>1</code> is used to toggle bold text. This style must remain active until one of the following escape code values are found:</p> <ul> <li><code>0</code> for the reset/normal font toggle</li> <li><code>22</code> for the bold off toggle</li> <li><code>23</code> for the normal intensity toggle</li> </ul> <pre><code>This is \\e[1mbold text\\e[0m\nThis \\e[3mitalicizes text which continues through the next lines\nThis is also \\e[1mbold text\\e[22m\nAnd this is \\e[1mbold text\\e[23m, but\nthen\\e[0m this resets all text.\n\nEscape codes can be \\e[31mred\\e[0m, \\e[32mgreen\\e[0m, or \\e[33myellow\\e[0m.\n\nAnd multiple \\e[1;31;47mstyles\\e[0m can be combined.\n</code></pre> <p>Because of this complexity, the code uses a JS class object named SGR (select or set graphic rendition) to keep track of the active font and style toggles while parsing the escape-encoded document. The JS object has over a dozen boolean properties to track the various text styles, some integer properties for the foreground and background, 16-color values, and a pair of strings for hexadecimal RGB color codes.</p> <p>RGB color codes are not part of the ANSI standard but are in some text artworks and are used by various applications. An RGB foreground or background color value will always override a previous 16 or 256-color value until a normal/reset control code (<code>\\e[0m</code>) is used.</p> <p>One key functionality of the standard is controlling the cursor position. Much like a modern text editor, you could use the controls to move the text input cursor up or down, left or right, to then apply additional text or styles to the new screen position.</p> <p>Unfortunately, HTML does not replicate this type of functionality at all. While it could be possible to track such positioning using JS and the Document Object Model in the browser, it would be needlessly complex and time-consuming for little reward. The typical use case for cursor movement was text art and animations from the early 1990s created for Bulletin Board Systems. However, these texts are better suited to read in a fixed-size ANSI editor, viewer, or terminal app than a web browser.</p> <p>The code uses a line-break HTML element to support the cursor's down positioning and forward (<code>\u2192</code> right movement) by injecting space characters for each forward value and <code>\u2193</code> down position. But there is no intention to support the back (<code>\u2190</code> left movement) and <code>\u2191</code> up positioning controls.</p>"},{"location":"src/pattern/#conflicts-ascii-and-ibm-code-pages","title":"Conflicts, ASCII and IBM code pages","text":"<p>The 256 codepoint Code page 437 was the primary text encoding for personal computers in the USA and Canada during the 1980s and early 1990s. However, CP-437 is incompatible with the universal ASCII text encoding and the\u00a0Unicode encoding.</p> <p>The first 32 code points (<code>0x00-0x1F</code>) of CP-437 contain display characters, while in ASCII and Unicode, these are control codes. For the applications using the legacy CP-437, it was up to the software to decide whether to display characters or obey an ASCII control code.</p> <p>For example, in MS-DOS, the primary PC operating system in the 1980s, code point 26 (<code>0x1A</code>) can display a right arrow <code>\u2192</code> or a marker to signal the end-of-document.</p> <p>For another example, code point 13 (<code>0x0D</code>) is usually a newline carriage return, but with CP-437, it can be the musical note <code>\u266a</code>.</p> <p>Whenever IBM CP-437 or other IBM codepages are detected, the RetroTxt code will generally obey the everyday control codes shown below, but otherwise, it displays the characters from the IBM codepage.</p> <pre><code>Code point 0x08, \"\u25d8\" is always a backspace control\nCode point 0x09, \"\u25cb\" is always a horizontal tab\nCode point 0x13, \"\u266a\" is always carriage return\nCode point 0x1A, \"\u2192\" is treaded as an end of file marker\nCode point 0x7F, \"\u2302\" is always a delete control\n</code></pre>"},{"location":"src/pattern/#switch-conditionals-and-a-lot-of-loops","title":"Switch conditionals and a lot of loops","text":"<p>When conceiving the initial code, I targeted the new ES6 (ECMAScript 2015). Unfortunately, this standard set lacked an equivalent to a regex look-behind assertion feature, so the code had to implement opaque multiple-loop switch conditionals to pattern match for control modifiers within the text document.</p> <p>At the time, switch statements were the most performant conditional pattern for the Chromium V8\u00a0JavaScript\u00a0engine, thanks to byte code conversion.</p> <pre><code>// CUU, CUD, CUF, CUB - Cursor Up, Down, Forward, Back\nswitch (digit._0) {\n  case true:\n    switch (digit._1) {\n      case true:\n        switch (digit._2) {\n          case true:\n            switch (digit._3) {\n              case true:\n                if (this._cursorCode(peak._4))\n                  // \u2190[1523A move thousands of places\n                  return this._cursorMove(peak._4, [\n                    peak._0,\n                    peak._1,\n                    peak._2,\n                    peak._3,\n                  ])\n                break\n              default:\n                ...\n</code></pre>"},{"location":"src/pattern/#text-characters-and-pattern-matching","title":"Text characters and pattern matching","text":"<p>The code uses strings instead integer arrays, even though most ANSI and legacy text interpretators historically would be hexadecimal or binary. But in browsers, the documents are loaded in as UTF-16 text, so conversion to integer values for parsing and back again as text for display seems unnecessary.</p> <p>As a bonus, text-based pattern matching is more readable than character and control code values.</p>"},{"location":"src/pattern/#there-are-no-magic-numbers","title":"There are no magic numbers","text":"<p>When dealing with legacy text standards, it is easy to fall into the trap of using hexadecimal or decimal codes as value representations which have no meaning without additional documentation. Code should always be readable without needing conversion tables or assumed knowledge.</p> <p>For example, using a symbol named <code>ESC</code> or <code>escape</code> is far more meaningful than providing the hexadecimal value <code>0x1B</code> or the integer <code>27</code> value out of context.</p> <pre><code>const escape = 27\nif (char === escape) {\n  ...\n}\n</code></pre>"},{"location":"src/pattern/#classes","title":"Classes","text":"<p>JS classes are used throughout the code except for some helper and local functions. They are templates for creating readable objects with more accessible naming options.</p> <pre><code>// An example of a class object in use\nconst ansi = new Controls()\nansi.parse()\nconsole.log(\"counts, columns: \", ansi.columns, \"rows: \", ansi.rows)\n</code></pre>"},{"location":"src/pattern/#idiomatic-text-elements","title":"Idiomatic text elements","text":"<p>The HTML idiomatic element applies CSS classes and styles to the text on the page. The code parses through the original text and escape controls, then uses the browser DOM to generate a new body element on the page, filled with idiomatic elements and text characters. The idiomatic approach seemed most appropriate and reduced the overall markup size.</p> <p>The <code>&lt;i&gt;</code> HTML element represents a range of text that is set off from the normal text for some reason, such as idiomatic text, technical terms, taxonomical designations, among others. Historically, these have been presented using italicized type, which is the original source of the <code>&lt;i&gt;</code> naming of this element.</p> <ul> <li>https://developer.mozilla.org/en-US/docs/Web/HTML/Element/i</li> </ul>"},{"location":"src/pattern/#the-preference-for-reference-over-of-primitive-types","title":"The preference for reference over of primitive types","text":"<p>When ES6 was new and the code conceived, the Chromium V8 JavaScript engine was optimized for reference types over primitive types. But this has since changed, and the engine uses a more balanced approach. However, the code still uses reference types for most of the data.</p> <p>Copying and accessing JS reference types, such as arrays and objects, can use far less memory than simple types, such as long strings or integers. When passing data using simple types, the data gets duplicated or modified instead of referenced.</p>"},{"location":"src/pattern/#objects-vs-arrays","title":"Objects vs arrays","text":"<p>During code design in the days of ES6, the JS community believed that objects were more memory efficient than arrays, so several array constructors, such as <code>Uint8Array</code>, were skipped. However, this disparity is not relevant today.</p>"},{"location":"src/pattern/#do-not-combine-reference-types-with-primitive-types-in-large-sets","title":"Do not combine reference types with primitive types in large sets","text":"<p>Referenced value types such as  <code>undefined</code> or <code>null</code> should never be mixed with simple values as they cause a performance hit.</p> <p>An array with exclusive number elements should only use <code>-1</code> or <code>NaN</code> for the absence of a value.</p> <p>An array with exclusive string elements should only use `` as empty values.</p>"},{"location":"src/standard/","title":"Standards","text":""},{"location":"src/standard/#ascii","title":"ASCII","text":"<p>The American Standard Code for Information Interchange was initially proposed in 1961 by the American National Standards Institute as a standard method to allow various computing and communication devices to communicate with each other. Before this time, machines from multiple manufacturers and even between different models couldn't understand each other's alphabetics, numerals, and other characters.</p> <p>The standard was revised multiple times, but it only caught on after a 1969 mandate requiring all new systems for US federal use to use the standard to minimize incompatibility between government hardware.</p> <p>ASCII became the core basis of the early Internet and part of the microcomputer and later PC revolution of the 1970s and 80s. The standard is why anyone making text files on an Apple II from 1977 can view them on an Intel PC running Microsoft Windows in 2024.</p> <p>ASCII is also a subset (C0 Controls and Basic Latin) of the Unicode standard, the default text encoding for the modern Internet and computing devices. The subset support often means simple text can be read and written by devices that use either standard.</p>"},{"location":"src/standard/#links","title":"Links:","text":"<ul> <li>ISO/IEC 646:1991 (paid)</li> <li>EMCA-43 (free)</li> <li>Britannica - ASCII</li> <li>The US ASCII Character Set</li> <li>Unicode charts</li> </ul> <p>See Codepages and text encodings for the character sets supported by the code.</p>"},{"location":"src/standard/#ansi","title":"ANSI","text":"<p>ANSI is an ambiguous term. The American National Standards Institute is a body that has published numerous computer text standards, including the famed ANSI Standard (X3.64) Control Sequences for Video Terminals and Peripherals, which introduced the control sequences used in modern terminal applications.</p> <p>It is believed that the term ANSI art originated from Microsoft's misnaming of the ANSI.SYS\u00a0system driver, which allowed the use of their\u00a0MS-DOS\u00a0operating system. ANSI usually refers to these near-identical standards.</p> <ul> <li>ISO 6429 - \"Control functions for 7-bit and 8-bit coded character sets\"</li> <li>ECMA-48  - \"Control functions for coded character sets\"</li> </ul>"},{"location":"src/standard/#links_1","title":"Links:","text":"<ul> <li>ISO/IEC 6429:1992 (paid)</li> <li>ECMA-48 (free)</li> <li>Microsoft ANSI.SYS</li> <li>XTerm Control Sequences</li> </ul> <p>See ANSI / ECMA-48 support for the control sequences supported by the code.</p>"},{"location":"usage/cfg/","title":"Configuration","text":"<p>This a retired document.</p>"},{"location":"usage/char/","title":"Character encoding","text":"<p>This a retired document.</p>"},{"location":"usage/first/","title":"First-time usage","text":"<p>Read and change all data</p> <p>Despite this access, RetroTxt always ignores websites other than those you tell it to monitor in the background. It also ignores all markup text, such as HTML or XML, for your privacy and overall browser performance.</p> <p>If unrestricted access remains a worry, you can configure the browser to restrict RetroTxt further.</p>"},{"location":"usage/first/#add-extension","title":"Add extension","text":"<p>When you install Chrome web store or Microsoft Edge add-ons, your browser will prompt for permission to read and change all data on all websites. Unfortunately, there is no workaround to avoid this. For more information, see Read and change all data to the right.</p> <p> </p> Extension prompt, Add \"RetroTxt\"?"},{"location":"usage/first/#new-install","title":"New install","text":"<p>What is .ANS</p> <p>The <code>.ANS</code> filename extension signifies text files embedded with ANSI escape control characters for terminals to permit the layout and colorization of the text.</p> <p>Once installed, you can test the functionality by viewing the RetroTxt ANSI logo hosted at:</p> <p>retrotxt.com/e/preview_02.ans</p> <p> </p> RetroTxt ANSI logo in the tab"},{"location":"usage/first/#hide-the-header","title":"Hide the header","text":"<p>You can click the blue arrow on the upper-left corner to hide the header and remove the clutter.</p> <p> </p> The blue arrow is clickable and hides the header <p> </p> The clutter free display"},{"location":"usage/first/#original-text","title":"Original text","text":"<p>If you want to view the original ANSI document, focus the tab and to launch a view source tab, tap:</p> <p>Ctrl u \u00a0 or \u00a0 Cmd Option u</p> <p> </p> RetroTxt logo raw ANSI text"},{"location":"usage/first/#monitor-a-new-website","title":"Monitor a new website","text":"<p>This example shows how to add a new website to the collection that RetroTxt monitors in the background. In this case, we will use the Internet Assigned Numbers Authority website at iana.org, which hosts many documents in plain text.</p> <ul> <li> <p>In a tab, open the text document special-use-domain-names.txt.</p> </li> <li> <p>Despite being plain text, RetroTxt ignores the page as it is not monitoring iana.org.</p> </li> </ul> <p> </p> Special-Use Domain Names text document <ul> <li>Click the RetroTxt toolbar button and a popup will display the websites it monitors in the background. You can learn more about or remove these websites.</li> </ul> <p> </p> The popup button (blue) is often hidden behind the Extensions button (red) <ul> <li>In the popup, click the blue To include a new website button.</li> </ul> <p> </p> Toolbar popup <ul> <li>Under Feature <code>&gt;</code> Autorun for websites <code>&gt;</code> Paste a URL or hostname input, copy and add the website URL: <p>https://www.iana.org</p></li> </ul> <p> </p> Add and monitor www.iana.org <p>Reload a tab</p> <p>To reload or refresh a tab,tap F5 \u00a0 or \u00a0 Cmd r</p> <ul> <li>Switch back to the tab with the <code>special-use-domain-names.txt</code> document and reload. RetroTxt will now format the text!</li> </ul> <p> </p> Special-Use Domain Names styled with the IBM VGA font"},{"location":"usage/first/#change-the-font","title":"Change the font","text":"<ul> <li>Click the RetroTxt fonts options button (the TT icon) in RetroTxt toolbar popup.</li> </ul> The RetroTxt fonts options button <ul> <li>Choose IBM Plex Mono Regular from the Suggested fonts.</li> </ul> IBM Plex suggested fonts <ul> <li>Switch back to the tab with the <code>special-use-domain-names.txt</code> text, and the font will update.</li> </ul> Special-Use Domain Names using the IBM Plex mono font"},{"location":"usage/first/#swap-colors","title":"Swap colors","text":"<ul> <li>Click the RetroTxt display options button (the monitor icon) in RetroTxt toolbar popup.</li> </ul> The RetroTxt display options button <ul> <li>Under Text color <code>&gt;</code> Foreground and background pair, choose the white on light selection.</li> </ul> White on light text pair selection <p>ANSI text</p> <p>A black background works best with ANSI text.</p> <p>Switch to the tab with the <code>special-use-domain-names.txt</code> text, and the page colors will reflect the change. Feel free to revert to the MS-DOS color pair or choose another.</p> <p> </p> The document using the white on light text pair selection"},{"location":"usage/first/#remove-a-website-monitor","title":"Remove a website monitor","text":"<p>Finally, to remove the monitoring of www.iana.org.</p> <ul> <li>Click the RetroTxt settings button (the cog icon) in RetroTxt toolbar popup.</li> </ul> <p></p> <ul> <li> <p>Under Feature <code>&gt;</code> Autorun for websites</p> </li> <li> <p>Click the X button (remove) besides the www.iana.org entry.</p> </li> </ul> <p> </p> Remove a URL or hostname <ul> <li>Switch back to the <code>special-use-domain-names.txt</code> document tab and reload. It should revert to the original, unformatted text.</li> </ul> <p> </p> The plain text document is in a browser tab"},{"location":"usage/font_size/","title":"Adjust the size of the font","text":"<p>You can change the zoom of the font by using the browser-inbuilt keyboard shortcuts.</p>"},{"location":"usage/font_size/#increase-the-font-size","title":"Increase the font size","text":"<p>Ctrl + \u00a0 or  \u00a0 Cmd +</p>"},{"location":"usage/font_size/#reduce-the-font-size","title":"Reduce the font size","text":"<p>Ctrl - \u00a0 or  \u00a0 Cmd -</p>"},{"location":"usage/garbled/","title":"Garbled or illegible text?","text":"<p>There could be many causes for garbled text, but it is generally related to the web server or browser choosing the incorrect character encoding for the text file.</p> <p>Modern web browsers and documents use the Unicode Transformation Format (UTF), while legacy text files rely on 8-bit codepages that use at most 256 unique text characters or glyphs. UTF decoding is not 100% backward with most legacy text encodings, but unfortunately, most browsers do not have an ideal way to fix this.</p> <p>RetroTxt can attempt to resolve this by swapping out different characters based on mocking the more common historic character encodings. On a RetroTxt rendered tab, there is a clickable item titled encoding in the tab's information header; clicking this multiple times will cycle through the mock encodings.</p> <p> </p> The yellow marked text can be clicked to mock the text encoding <p> </p> Here is a text document with the correct character encoding <p> </p> Here is the same text with the incorrect character encoding"},{"location":"usage/local/","title":"Texts stored locally","text":"<p>My text file does not open</p> <p>Browsers a very inconsistent with the files they will open. If a text file has too many unexpected ASCII control characters, a browser may confuse it as binary file and refuse to open.</p> <p>Browsers are happy to display files stored locally on your computer. You can drag and drop a text or document to the browser, which will open in a new tab.</p> <p>The URL of the tab will point to the file path with a <code>file:///</code> protocol prefix. Windows also includes a drive letter.</p> WindowsmacOSLinux A local file URL<pre><code>file:///C:/Users/Ben/Downloads/document.txt\n</code></pre> A local file URL<pre><code>file:///Users/ben/Downloads/document.txt\n</code></pre> A local file URL<pre><code>file:///home/ben/Downloads/document.txt\n</code></pre> <p>RetroTxt will work with any local file URL but needs to be given this permission using the Manage extension menu.</p> <p>To access this, right-click the RetroTxt toolbar button and select Manage extension.</p> <p> </p> The RetroTxt button pinned to the toolbar <p>Scroll down to and enable Allow access to file URLs under Permissions.</p> <p>Now, RetroTxt will monitor any local text files opened in the browser!</p> <p> </p> Allow access to the file URLs"},{"location":"usage/omnibar/","title":"Commands","text":"<p>RetroTxt supports several commands using the address bar, also known as the Omnibox. The commands are triggered using a combination of keywords, and the browser will provide suggestions as you type.</p>"},{"location":"usage/omnibar/#txt-is-the-omnibar-trigger-keyword","title":"txt is the omnibar trigger keyword","text":"Omnibox txt samples command Command Description <code>txt version</code> Display the RetroTxt version information <code>txt fonts</code> Open the fonts selections tab <code>txt display</code> Open the text, ANSI, and color display options <code>txt settings</code> Open the settings tab <code>txt documentation</code> Goto the RetroTxt online documentation <code>txt credits</code> List the credits <code>txt samples</code> Links and thumbnails of sample ANSI and ASCII artwork to view with RetroTxt <code>txt useful</code> Links to useful and related websites <code>txt tests</code> <sup>1</sup> In developer mode, run the QUnit tests <code>txt reload</code> <sup>1</sup> In developer mode, reload the Extension <ol> <li> <p>Only usable when the browser Extensions configuration has Developer mode toggled.\u00a0\u21a9\u21a9</p> </li> </ol>"},{"location":"usage/pref/","title":"Browser wars","text":"<p>macOS tweaks</p> <ol> <li>Make sure the Retina Display Scale is exactly half your screen resolution for crisper text.</li> <li>For example, if a Macbook Pro 13.3\" has a 2560 x 1600 resolution, you'd want the Built-in Retina Display to scale to 1280 x 800.</li> <li>Because of the high resolutions with modern Apple hardware, you can also disable Use font smoothing when available.</li> </ol>"},{"location":"usage/pref/#a-system-or-browser-preference","title":"A system or browser preference?","text":"<p>All supported browsers use the identical Blink, open-sourced browser render engine.</p> <p>Apple's macOS is the best platform for RetroTxt as it displays all text characters without distortion. However, Chrome on other platforms, including Windows, Linux, and ChromeOS, suffers from distortions caused by its system-wide font hinting.</p> macOSWindowsWindows with CSS fix <sup>1</sup> <p></p> <p></p> <p></p> <ol> <li> <p>RetroTxt applies a cascading style fix to reduce the artifacts.\u00a0\u21a9</p> </li> </ol>"},{"location":"usage/secure/","title":"Secure and restrict RetroTxt","text":"<p>For security and performance, RetroTxt will only work on websites and domains you specifically list in the Autorun for websites list. From there you can add or remove the domains of your choosing.</p> <p>Unfortunately, on installation, RetroTxt requests the permission to Read and change all your data on all websites. It is a limitation of the permission configuration, and in the future, I hope these can be fine-tuned and narrowed.</p> <p>RetroTxt ignores all websites other than those you tell it to monitor in the background and does not collect or transmit any data. But if you work in a corporate environment or want to limit access, please read on.</p> <p> </p> Add extension, broad permission request"},{"location":"usage/secure/#add-retrotxt-to-its-own-isolated-profile","title":"Add RetroTxt to its own isolated Profile","text":"<p>Firstly, I'd recommend creating a new Chrome or Edge profile to install RetroTxt. The new profile does not need a Google or Microsoft account when using the Continue without an account option. And importantly RetroTxt will only ever operate within that profile. By switching between profiles, any signed-in accounts and webpages will be isolated from RetroTxt.</p> <p> </p> Setup a new Chrome profile to isolate RetroTxt"},{"location":"usage/secure/#remove-suggestions","title":"Remove Suggestions","text":"<p>For the fans of ANSI and ASCII art, there are several websites that RetroTxt monitors in the background. Click the RetroTxt settings button (the cog icon) in RetroTxt toolbar popup.</p> <p> </p> The popup button (blue) is often hidden behind the Extensions button (red) <p> </p> RetroTxt settings button in the toolbar popup <p>Under Feature <code>&gt;</code> Autorun for websites, click the remove button above Suggestions, and now RetroTxt will only monitor retrotxt.com. Read on to also block this.</p> <p> </p> The remove button clears all the included websites"},{"location":"usage/secure/#manage-extension","title":"Manage extension","text":"<p>RetroTxt can be further isolated using the Manage extension configuration.</p> <p>To access this, right-click the RetroTxt toolbar button and select Manage extension.</p> DefaultPinned <p> The RetroTxt toolbar button is hidden behind the Extensions button </p> <p> The RetroTxt button pinned to the toolbar </p> <p>Scroll down to Site access under Permissions.</p> <p>Under the Allow this extension to read and change all your data on websites you visit, swap the On all sites to On click.</p> <p>This setting blocks RetroTxt from being notified of or accessing any tabs.</p> <p> </p> Permissions, on click site access <p>Refresh tabs</p> <p>After permitting access, any open tabs will need reloading.</p> <p>To test the change,visit https://retrotxt.com/e/preview_02.ansand the tab displays an unchanged ANSI document in raw text, as RetroTxt cannot access this and any other tabs.</p> <p>But the RetroTxt toolbar button is subtly highlighted and embossed to signify it is blocked. Clicking it permits RetroTxt to access retrotxt.com temporarily for the browser session.</p> <p> </p> The outline and emboss RetroTxt toolbar button."},{"location":"usage/websites/","title":"Suggestions","text":"<p>For the fans of ANSI and ASCII art, there are several websites that RetroTxt monitors in the background. These are optional.</p> <p>The only permanent domain is retrotxt.com, which is used as a fallback to confirm the Extension installation works.  This domain also hosts the Sample artworks you can access by typing <code>txt samples</code> in the address bar.</p> <p>Sample files</p> <p>The samples are also browsable using: retrotxt.com/e</p> <ul> <li>retrotxt.com Hosts the texts and artworks linked in the Samples tab.</li> <li>localhost Permits the use of local and simple HTTP servers.</li> <li>16colo.rs The primary hub of the ANSI and ASCII art communities.</li> <li>defacto2.net An extensive collection of computer underground text art and documents.</li> <li>gutenberg.org The world's most comprehensive collection of public domain books in plain text and other formats.</li> <li>scene.org The primary file hosting service for the demo scene.</li> <li>textfiles.com An extensive text file collection from the early Internet and BBS era.</li> <li>uncreativelabs.net Retro computing texts and files.</li> </ul>"}]}